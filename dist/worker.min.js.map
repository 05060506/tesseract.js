{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./src/browser/worker.js","webpack:///./src/common/worker.js","webpack:///./node_modules/tesseract.js-utils/src/index.browser.js","webpack:///./node_modules/tesseract.js-utils/src/loadLang.js","webpack:///./node_modules/tesseract.js-utils/src/common/browser/fetch.js","webpack:///./node_modules/tesseract.js-utils/node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/tesseract.js-utils/src/common/browser/gunzip.js","webpack:///./node_modules/zlibjs/bin/node-zlib.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/tesseract.js-utils/src/common/browser/cache.js","webpack:///./node_modules/idb-keyval/dist/idb-keyval.mjs","webpack:///./node_modules/tesseract.js-utils/src/readImage.js","webpack:///./src/common/dump.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","global","workerUtils","addEventListener","data","dispatchHandlers","obj","postMessage","setAdapter","getCore","req","res","TesseractCore","progress","status","importScripts","workerOptions","corePath","WebAssembly","TesseractCoreWASM","TesseractCoreASM","readImage","loadLang","dump","Module","base","latestJob","adapter","handleInit","MIN_MEMORY","includes","options","lang","TOTAL_MEMORY","Core","[object Object]","percent","Math","max","then","TessModule","TessBaseAPI","Promise","setImage","image","w","h","Array","from","SetImage","SetRectangle","loadLanguage","cb","langPath","langs","tessModule","langURI","cache","packet","send","respond","jobId","action","resolve","reject","progressUpdate","Init","keys","forEach","SetVariable","ptr","Recognize","result","End","_free","handleRecognize","payload","SetPageSegMode","PSM_OSD_ONLY","results","OSResults","DetectOS","best","get_best_result","oid","get_orientation_id","sid","get_script_id","tesseract_script_id","script","get_unicharset","get_script_from_script_id","script_confidence","get_sconfidence","orientation_degrees","orientation_confidence","get_oconfidence","handleDetect","err","toString","impl","fetch","gunzip","handleLang","dataPath","cachePath","FS","mkdir","writeFile","writeCache","all","split","map","readCache","catch","resp","arrayBuffer","buf","Uint8Array","loadAndGunzipFile","__webpack_exports__","Headers","Request","Response","DOMException","support","searchParams","self","iterable","blob","Blob","formData","viewClasses","isArrayBufferView","ArrayBuffer","isView","indexOf","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","headers","append","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","slice","view","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","type","rejected","Error","text","readAsText","chars","length","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","callback","thisArg","push","values","entries","methods","input","method","upcased","url","credentials","signal","toUpperCase","referrer","form","trim","bytes","replace","decodeURIComponent","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","message","stack","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","removeEventListener","polyfill","gunzipSync","process","Buffer","q","b","v","B","Uint16Array","Uint32Array","G","index","f","k","I","finish","subarray","L","aa","ba","R","ca","ha","S","ia","ja","ka","T","Number","POSITIVE_INFINITY","na","oa","F","lazy","compressionType","outputBuffer","outputIndex","getParent","pop","U","pa","NONE","X","qa","va","N","C","x","u","ra","apply","M","z","Y","da","Fa","ea","Ga","la","Ha","Z","ma","E","Ia","D","qb","ta","ua","sa","y","O","A","fa","H","Ja","Ka","K","J","P","Q","Na","ga","wa","Oa","Pa","Qa","Ra","La","Ma","xa","ya","za","Aa","Ba","flags","filename","comment","deflateOptions","fname","Ca","fcomment","Da","fhcrc","Ea","Date","now","Sa","charCodeAt","V","j","Ta","bufferSize","bufferType","resize","Ua","W","Va","Wa","Xa","Ya","$","ib","Za","$a","ab","bb","db","eb","fb","gb","hb","kb","lb","jb","mb","nb","ob","verify","pb","concat","rb","sb","ub","Bb","wb","noBuffer","yb","Ab","LOG2E","log","deflate","nextTick","deflateSync","inflate","inflateSync","gzip","gzipSync","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","args","arguments","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","__proto__","arg","encodingOrOffset","allocUnsafe","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","isBuffer","checked","copy","val","fromObject","assertSize","size","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","isNaN","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","b64","placeHoldersCount","tmp","placeHolders","Arr","revLookup","uint8","extraBytes","output","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","Store","del","clear","dbName","storeName","_dbp","openreq","indexedDB","onsuccess","onupgradeneeded","createObjectStore","transaction","oncomplete","objectStore","store","getDefaultStore","_withIDBStore","put","delete","openKeyCursor","openCursor","continue","_malloc","BYTES_PER_ELEMENT","HEAPU8","pix","_pixReadMem","getValue","setValue","spp","wpl","refcount","xres","yres","informat","special","idx","ri","GetIterator","blocks","block","para","textline","word","symbol","enumToString","prefix","filter","Begin","IsAtBeginningOf","RIL_BLOCK","poly","BlockPolygon","polygon","getPointer","get_n","px","get_x","py","get_y","_ptaDestroy","paragraphs","GetUTF8Text","confidence","Confidence","baseline","getBaseline","bbox","getBoundingBox","blocktype","BlockType","RIL_PARA","lines","is_ltr","ParagraphIsLtr","RIL_TEXTLINE","words","RIL_WORD","fontInfo","getWordFontAttributes","wordDir","WordDirection","symbols","choices","is_numeric","WordIsNumeric","in_dictionary","WordIsFromDictionary","direction","language","WordRecognitionLanguage","is_bold","is_italic","is_underlined","is_monospace","is_serif","is_smallcaps","font_size","pointsize","font_id","font_name","wc","WordChoiceIterator","Next","destroy","RIL_SYMBOL","is_superscript","SymbolIsSuperscript","is_subscript","SymbolIsSubscript","is_dropcap","SymbolIsDropcap","ci","ChoiceIterator","html","substring","deindent","GetHOCRText","MeanTextConf","psm","GetPageSegMode","oem","Version"],"mappings":"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","file":"worker.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","const workerUtils = require('../common/worker');\n\nglobal.addEventListener('message', ({ data }) => {\n  workerUtils.dispatchHandlers(data, obj => postMessage(obj));\n});\n\nworkerUtils.setAdapter({\n  getCore: (req, res) => {\n    if (!global.TesseractCore) {\n      res.progress({ status: 'loading tesseract core', progress: 0 });\n      global.importScripts(req.workerOptions.corePath);\n      global.TesseractCore = typeof WebAssembly === 'object' ? global.TesseractCoreWASM : global.TesseractCoreASM;\n      res.progress({ status: 'loading tesseract core', progress: 1 });\n    }\n    return global.TesseractCore;\n  },\n});\n","const { readImage, loadLang } = require('tesseract.js-utils');\nconst dump = require('./dump');\n\nlet Module;\nlet base;\nlet latestJob;\nlet adapter = {};\n\nconst handleInit = (req, res) => {\n  let MIN_MEMORY = 100663296;\n\n  if (['chi_sim', 'chi_tra', 'jpn'].includes(req.options.lang)) {\n    MIN_MEMORY = 167772160;\n  }\n\n  if (!Module || Module.TOTAL_MEMORY < MIN_MEMORY) {\n    const Core = adapter.getCore(req, res);\n\n    res.progress({ status: 'initializing tesseract', progress: 0 });\n\n    return Core({\n      // TOTAL_MEMORY: MIN_MEMORY,\n      TesseractProgress(percent) {\n        latestJob.progress({ status: 'recognizing text', progress: Math.max(0, (percent - 30) / 70) });\n      },\n    })\n      .then((TessModule) => {\n        Module = TessModule;\n        base = new Module.TessBaseAPI();\n        res.progress({ status: 'initialized tesseract', progress: 1 });\n      });\n  }\n\n  return new Promise();\n};\n\nconst setImage = (image) => {\n  const { w, h, data } = readImage(Module, Array.from(image));\n\n  base.SetImage(data);\n  base.SetRectangle(0, 0, w, h);\n  return data;\n};\n\nconst loadLanguage = (req, res, cb) => {\n  const { options: { lang }, workerOptions: { langPath } } = req;\n  return loadLang({\n    langs: lang,\n    tessModule: Module,\n    langURI: langPath,\n    cache: true,\n  }).then(cb);\n};\n\nconst handleRecognize = (req, res) => {\n  handleInit(req, res)\n    .then(() => {\n      loadLanguage(req, res, () => {\n        const { options } = req;\n\n        const progressUpdate = (progress) => {\n          res.progress({ status: 'initializing api', progress });\n        };\n\n        progressUpdate(0);\n        base.Init(null, options.lang);\n        progressUpdate(0.3);\n\n        Object.keys(options).forEach((key) => {\n          base.SetVariable(key, options[key]);\n        });\n\n        progressUpdate(0.6);\n        const ptr = setImage(req.image);\n        progressUpdate(1);\n\n        base.Recognize(null);\n\n        const result = dump(Module, base);\n\n        base.End();\n        Module._free(ptr);\n\n        res.resolve(result);\n      });\n    });\n};\n\n\nconst handleDetect = (req, res) => {\n  handleInit(req, res)\n    .then(() => {\n      req.options.lang = 'osd';\n      loadLanguage(req, res, () => {\n        base.Init(null, 'osd');\n        base.SetPageSegMode(Module.PSM_OSD_ONLY);\n\n        const ptr = setImage(req.image);\n        const results = new Module.OSResults();\n\n        if (!base.DetectOS(results)) {\n          base.End();\n          Module._free(ptr);\n          res.reject('Failed to detect OS');\n        } else {\n          const best = results.get_best_result();\n          const oid = best.get_orientation_id();\n          const sid = best.get_script_id();\n\n          base.End();\n          Module._free(ptr);\n\n          res.resolve({\n            tesseract_script_id: sid,\n            script: results.get_unicharset().get_script_from_script_id(sid),\n            script_confidence: best.get_sconfidence(),\n            orientation_degrees: [0, 270, 180, 90][oid],\n            orientation_confidence: best.get_oconfidence(),\n          });\n        }\n      });\n    });\n};\n\nexports.dispatchHandlers = (packet, send) => {\n  const respond = (status, data) => {\n    send({\n      jobId: packet.jobId,\n      status,\n      action: packet.action,\n      data,\n    });\n  };\n  respond.resolve = respond.bind(this, 'resolve');\n  respond.reject = respond.bind(this, 'reject');\n  respond.progress = respond.bind(this, 'progress');\n\n  latestJob = respond;\n\n  try {\n    if (packet.action === 'recognize') {\n      handleRecognize(packet.payload, respond);\n    } else if (packet.action === 'detect') {\n      handleDetect(packet.payload, respond);\n    }\n  } catch (err) {\n    // Prepare exception to travel through postMessage\n    respond.reject(err.toString());\n  }\n};\n\nexports.setAdapter = (impl) => {\n  adapter = impl;\n};\n","module.exports = {\n  loadLang: require('./loadLang')({\n    fetch: require('./common/browser/fetch'),\n    gunzip: require('./common/browser/gunzip'),\n    ...require('./common/browser/cache'),\n  }),\n  readImage: require('./readImage'),\n};\n","const handleLang = modules => ({\n  tessModule,\n  dataPath,\n  cachePath,\n  cache,\n  lang,\n}) => (data) => {\n  if (tessModule) {\n    if (dataPath) {\n      try {\n        tessModule.FS.mkdir(dataPath);\n      } catch (err) {\n        // Do nothing\n      }\n    }\n    tessModule.FS.writeFile(`${dataPath || '.'}/${lang}.traineddata`, data);\n  }\n  if (cache) {\n    modules.writeCache(`${cachePath || '.'}/${lang}.traineddata`, data);\n  }\n  return data;\n};\n\nconst loadAndGunzipFile = modules => ({\n  langURI,\n  cachePath,\n  ...options\n}) => lang => (\n  modules.readCache(`${cachePath || '.'}/${lang}.traineddata`)\n    .then((data) => {\n      if (typeof data === 'undefined') {\n        return Promise.reject();\n      }\n      return handleLang(modules)({ cachePath, lang, ...options })(data);\n    })\n    .catch(() => (\n      // console.log(`Download ${lang}.traineddata.gz from ${langURI}/${lang}.traineddata.gz...`);\n      modules.fetch(`${langURI}/${lang}.traineddata.gz`)\n        .then(resp => resp.arrayBuffer())\n        .then(buf => modules.gunzip(new Uint8Array(buf)))\n        .then(handleLang(modules)({ cachePath, lang, ...options }))\n    ))\n);\n\n/**\n * Load language(s) from local cache, download from remote if not in cache.\n *\n * All params below actually store in a object.\n *\n * ex:\n *   loadLang({ langs, tesssModule, ... });\n *\n * @name loadLang\n * @function\n * @param {string} langs - langs to load, use '+' for multiple languages, ex: eng+chi_tra\n * @param {object} tessModule - TesseractModule\n * @param {string} langURI - prefix URI for downloading lang file\n * @param {string} cachePath - path to find cache\n * @param {string} dataPath - path to store data in mem\n * @param {boolean} cache - true for caching\n *\n */\nmodule.exports = modules => ({\n  langs,\n  ...options\n}) => (\n  Promise\n    .all(langs.split('+').map(loadAndGunzipFile(modules)(options)))\n);\n","const { fetch } = require('whatwg-fetch');\n\nmodule.exports = fetch;\n","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n","module.exports = require('zlibjs').gunzipSync;\n","/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {'use strict';function q(b){throw b;}var t=void 0,v=!0;var B=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function G(b,a){this.index=\"number\"===typeof a?a:0;this.m=0;this.buffer=b instanceof(B?Uint8Array:Array)?b:new (B?Uint8Array:Array)(32768);2*this.buffer.length<=this.index&&q(Error(\"invalid index\"));this.buffer.length<=this.index&&this.f()}G.prototype.f=function(){var b=this.buffer,a,c=b.length,d=new (B?Uint8Array:Array)(c<<1);if(B)d.set(b);else for(a=0;a<c;++a)d[a]=b[a];return this.buffer=d};\nG.prototype.d=function(b,a,c){var d=this.buffer,e=this.index,f=this.m,g=d[e],k;c&&1<a&&(b=8<a?(I[b&255]<<24|I[b>>>8&255]<<16|I[b>>>16&255]<<8|I[b>>>24&255])>>32-a:I[b]>>8-a);if(8>a+f)g=g<<a|b,f+=a;else for(k=0;k<a;++k)g=g<<1|b>>a-k-1&1,8===++f&&(f=0,d[e++]=I[g],g=0,e===d.length&&(d=this.f()));d[e]=g;this.buffer=d;this.m=f;this.index=e};G.prototype.finish=function(){var b=this.buffer,a=this.index,c;0<this.m&&(b[a]<<=8-this.m,b[a]=I[b[a]],a++);B?c=b.subarray(0,a):(b.length=a,c=b);return c};\nvar aa=new (B?Uint8Array:Array)(256),L;for(L=0;256>L;++L){for(var R=L,ba=R,ca=7,R=R>>>1;R;R>>>=1)ba<<=1,ba|=R&1,--ca;aa[L]=(ba<<ca&255)>>>0}var I=aa;function ha(b,a,c){var d,e=\"number\"===typeof a?a:a=0,f=\"number\"===typeof c?c:b.length;d=-1;for(e=f&7;e--;++a)d=d>>>8^S[(d^b[a])&255];for(e=f>>3;e--;a+=8)d=d>>>8^S[(d^b[a])&255],d=d>>>8^S[(d^b[a+1])&255],d=d>>>8^S[(d^b[a+2])&255],d=d>>>8^S[(d^b[a+3])&255],d=d>>>8^S[(d^b[a+4])&255],d=d>>>8^S[(d^b[a+5])&255],d=d>>>8^S[(d^b[a+6])&255],d=d>>>8^S[(d^b[a+7])&255];return(d^4294967295)>>>0}\nvar ia=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,\n2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,\n2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,\n2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,\n3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,\n936918E3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],S=B?new Uint32Array(ia):ia;function ja(){};function ka(b){this.buffer=new (B?Uint16Array:Array)(2*b);this.length=0}ka.prototype.getParent=function(b){return 2*((b-2)/4|0)};ka.prototype.push=function(b,a){var c,d,e=this.buffer,f;c=this.length;e[this.length++]=a;for(e[this.length++]=b;0<c;)if(d=this.getParent(c),e[c]>e[d])f=e[c],e[c]=e[d],e[d]=f,f=e[c+1],e[c+1]=e[d+1],e[d+1]=f,c=d;else break;return this.length};\nka.prototype.pop=function(){var b,a,c=this.buffer,d,e,f;a=c[0];b=c[1];this.length-=2;c[0]=c[this.length];c[1]=c[this.length+1];for(f=0;;){e=2*f+2;if(e>=this.length)break;e+2<this.length&&c[e+2]>c[e]&&(e+=2);if(c[e]>c[f])d=c[f],c[f]=c[e],c[e]=d,d=c[f+1],c[f+1]=c[e+1],c[e+1]=d;else break;f=e}return{index:b,value:a,length:this.length}};function T(b){var a=b.length,c=0,d=Number.POSITIVE_INFINITY,e,f,g,k,h,m,r,p,l,n;for(p=0;p<a;++p)b[p]>c&&(c=b[p]),b[p]<d&&(d=b[p]);e=1<<c;f=new (B?Uint32Array:Array)(e);g=1;k=0;for(h=2;g<=c;){for(p=0;p<a;++p)if(b[p]===g){m=0;r=k;for(l=0;l<g;++l)m=m<<1|r&1,r>>=1;n=g<<16|p;for(l=m;l<e;l+=h)f[l]=n;++k}++g;k<<=1;h<<=1}return[f,c,d]};function na(b,a){this.k=oa;this.F=0;this.input=B&&b instanceof Array?new Uint8Array(b):b;this.b=0;a&&(a.lazy&&(this.F=a.lazy),\"number\"===typeof a.compressionType&&(this.k=a.compressionType),a.outputBuffer&&(this.a=B&&a.outputBuffer instanceof Array?new Uint8Array(a.outputBuffer):a.outputBuffer),\"number\"===typeof a.outputIndex&&(this.b=a.outputIndex));this.a||(this.a=new (B?Uint8Array:Array)(32768))}var oa=2,pa={NONE:0,L:1,t:oa,X:3},qa=[],U;\nfor(U=0;288>U;U++)switch(v){case 143>=U:qa.push([U+48,8]);break;case 255>=U:qa.push([U-144+400,9]);break;case 279>=U:qa.push([U-256+0,7]);break;case 287>=U:qa.push([U-280+192,8]);break;default:q(\"invalid literal: \"+U)}\nna.prototype.h=function(){var b,a,c,d,e=this.input;switch(this.k){case 0:c=0;for(d=e.length;c<d;){a=B?e.subarray(c,c+65535):e.slice(c,c+65535);c+=a.length;var f=a,g=c===d,k=t,h=t,m=t,r=t,p=t,l=this.a,n=this.b;if(B){for(l=new Uint8Array(this.a.buffer);l.length<=n+f.length+5;)l=new Uint8Array(l.length<<1);l.set(this.a)}k=g?1:0;l[n++]=k|0;h=f.length;m=~h+65536&65535;l[n++]=h&255;l[n++]=h>>>8&255;l[n++]=m&255;l[n++]=m>>>8&255;if(B)l.set(f,n),n+=f.length,l=l.subarray(0,n);else{r=0;for(p=f.length;r<p;++r)l[n++]=\nf[r];l.length=n}this.b=n;this.a=l}break;case 1:var s=new G(B?new Uint8Array(this.a.buffer):this.a,this.b);s.d(1,1,v);s.d(1,2,v);var u=ra(this,e),w,C,x;w=0;for(C=u.length;w<C;w++)if(x=u[w],G.prototype.d.apply(s,qa[x]),256<x)s.d(u[++w],u[++w],v),s.d(u[++w],5),s.d(u[++w],u[++w],v);else if(256===x)break;this.a=s.finish();this.b=this.a.length;break;case oa:var D=new G(B?new Uint8Array(this.a.buffer):this.a,this.b),M,z,N,X,Y,qb=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],da,Fa,ea,Ga,la,ta=Array(19),\nHa,Z,ma,E,Ia;M=oa;D.d(1,1,v);D.d(M,2,v);z=ra(this,e);da=sa(this.U,15);Fa=ua(da);ea=sa(this.T,7);Ga=ua(ea);for(N=286;257<N&&0===da[N-1];N--);for(X=30;1<X&&0===ea[X-1];X--);var Ja=N,Ka=X,K=new (B?Uint32Array:Array)(Ja+Ka),y,O,A,fa,J=new (B?Uint32Array:Array)(316),H,F,P=new (B?Uint8Array:Array)(19);for(y=O=0;y<Ja;y++)K[O++]=da[y];for(y=0;y<Ka;y++)K[O++]=ea[y];if(!B){y=0;for(fa=P.length;y<fa;++y)P[y]=0}y=H=0;for(fa=K.length;y<fa;y+=O){for(O=1;y+O<fa&&K[y+O]===K[y];++O);A=O;if(0===K[y])if(3>A)for(;0<A--;)J[H++]=\n0,P[0]++;else for(;0<A;)F=138>A?A:138,F>A-3&&F<A&&(F=A-3),10>=F?(J[H++]=17,J[H++]=F-3,P[17]++):(J[H++]=18,J[H++]=F-11,P[18]++),A-=F;else if(J[H++]=K[y],P[K[y]]++,A--,3>A)for(;0<A--;)J[H++]=K[y],P[K[y]]++;else for(;0<A;)F=6>A?A:6,F>A-3&&F<A&&(F=A-3),J[H++]=16,J[H++]=F-3,P[16]++,A-=F}b=B?J.subarray(0,H):J.slice(0,H);la=sa(P,7);for(E=0;19>E;E++)ta[E]=la[qb[E]];for(Y=19;4<Y&&0===ta[Y-1];Y--);Ha=ua(la);D.d(N-257,5,v);D.d(X-1,5,v);D.d(Y-4,4,v);for(E=0;E<Y;E++)D.d(ta[E],3,v);E=0;for(Ia=b.length;E<Ia;E++)if(Z=\nb[E],D.d(Ha[Z],la[Z],v),16<=Z){E++;switch(Z){case 16:ma=2;break;case 17:ma=3;break;case 18:ma=7;break;default:q(\"invalid code: \"+Z)}D.d(b[E],ma,v)}var La=[Fa,da],Ma=[Ga,ea],Q,Na,ga,wa,Oa,Pa,Qa,Ra;Oa=La[0];Pa=La[1];Qa=Ma[0];Ra=Ma[1];Q=0;for(Na=z.length;Q<Na;++Q)if(ga=z[Q],D.d(Oa[ga],Pa[ga],v),256<ga)D.d(z[++Q],z[++Q],v),wa=z[++Q],D.d(Qa[wa],Ra[wa],v),D.d(z[++Q],z[++Q],v);else if(256===ga)break;this.a=D.finish();this.b=this.a.length;break;default:q(\"invalid compression type\")}return this.a};\nfunction va(b,a){this.length=b;this.N=a}\nvar xa=function(){function b(a){switch(v){case 3===a:return[257,a-3,0];case 4===a:return[258,a-4,0];case 5===a:return[259,a-5,0];case 6===a:return[260,a-6,0];case 7===a:return[261,a-7,0];case 8===a:return[262,a-8,0];case 9===a:return[263,a-9,0];case 10===a:return[264,a-10,0];case 12>=a:return[265,a-11,1];case 14>=a:return[266,a-13,1];case 16>=a:return[267,a-15,1];case 18>=a:return[268,a-17,1];case 22>=a:return[269,a-19,2];case 26>=a:return[270,a-23,2];case 30>=a:return[271,a-27,2];case 34>=a:return[272,\na-31,2];case 42>=a:return[273,a-35,3];case 50>=a:return[274,a-43,3];case 58>=a:return[275,a-51,3];case 66>=a:return[276,a-59,3];case 82>=a:return[277,a-67,4];case 98>=a:return[278,a-83,4];case 114>=a:return[279,a-99,4];case 130>=a:return[280,a-115,4];case 162>=a:return[281,a-131,5];case 194>=a:return[282,a-163,5];case 226>=a:return[283,a-195,5];case 257>=a:return[284,a-227,5];case 258===a:return[285,a-258,0];default:q(\"invalid length: \"+a)}}var a=[],c,d;for(c=3;258>=c;c++)d=b(c),a[c]=d[2]<<24|d[1]<<\n16|d[0];return a}(),ya=B?new Uint32Array(xa):xa;\nfunction ra(b,a){function c(a,c){var b=a.N,d=[],f=0,e;e=ya[a.length];d[f++]=e&65535;d[f++]=e>>16&255;d[f++]=e>>24;var g;switch(v){case 1===b:g=[0,b-1,0];break;case 2===b:g=[1,b-2,0];break;case 3===b:g=[2,b-3,0];break;case 4===b:g=[3,b-4,0];break;case 6>=b:g=[4,b-5,1];break;case 8>=b:g=[5,b-7,1];break;case 12>=b:g=[6,b-9,2];break;case 16>=b:g=[7,b-13,2];break;case 24>=b:g=[8,b-17,3];break;case 32>=b:g=[9,b-25,3];break;case 48>=b:g=[10,b-33,4];break;case 64>=b:g=[11,b-49,4];break;case 96>=b:g=[12,b-\n65,5];break;case 128>=b:g=[13,b-97,5];break;case 192>=b:g=[14,b-129,6];break;case 256>=b:g=[15,b-193,6];break;case 384>=b:g=[16,b-257,7];break;case 512>=b:g=[17,b-385,7];break;case 768>=b:g=[18,b-513,8];break;case 1024>=b:g=[19,b-769,8];break;case 1536>=b:g=[20,b-1025,9];break;case 2048>=b:g=[21,b-1537,9];break;case 3072>=b:g=[22,b-2049,10];break;case 4096>=b:g=[23,b-3073,10];break;case 6144>=b:g=[24,b-4097,11];break;case 8192>=b:g=[25,b-6145,11];break;case 12288>=b:g=[26,b-8193,12];break;case 16384>=\nb:g=[27,b-12289,12];break;case 24576>=b:g=[28,b-16385,13];break;case 32768>=b:g=[29,b-24577,13];break;default:q(\"invalid distance\")}e=g;d[f++]=e[0];d[f++]=e[1];d[f++]=e[2];var h,k;h=0;for(k=d.length;h<k;++h)l[n++]=d[h];u[d[0]]++;w[d[3]]++;s=a.length+c-1;p=null}var d,e,f,g,k,h={},m,r,p,l=B?new Uint16Array(2*a.length):[],n=0,s=0,u=new (B?Uint32Array:Array)(286),w=new (B?Uint32Array:Array)(30),C=b.F,x;if(!B){for(f=0;285>=f;)u[f++]=0;for(f=0;29>=f;)w[f++]=0}u[256]=1;d=0;for(e=a.length;d<e;++d){f=k=0;\nfor(g=3;f<g&&d+f!==e;++f)k=k<<8|a[d+f];h[k]===t&&(h[k]=[]);m=h[k];if(!(0<s--)){for(;0<m.length&&32768<d-m[0];)m.shift();if(d+3>=e){p&&c(p,-1);f=0;for(g=e-d;f<g;++f)x=a[d+f],l[n++]=x,++u[x];break}0<m.length?(r=za(a,d,m),p?p.length<r.length?(x=a[d-1],l[n++]=x,++u[x],c(r,0)):c(p,-1):r.length<C?p=r:c(r,0)):p?c(p,-1):(x=a[d],l[n++]=x,++u[x])}m.push(d)}l[n++]=256;u[256]++;b.U=u;b.T=w;return B?l.subarray(0,n):l}\nfunction za(b,a,c){var d,e,f=0,g,k,h,m,r=b.length;k=0;m=c.length;a:for(;k<m;k++){d=c[m-k-1];g=3;if(3<f){for(h=f;3<h;h--)if(b[d+h-1]!==b[a+h-1])continue a;g=f}for(;258>g&&a+g<r&&b[d+g]===b[a+g];)++g;g>f&&(e=d,f=g);if(258===g)break}return new va(f,a-e)}\nfunction sa(b,a){var c=b.length,d=new ka(572),e=new (B?Uint8Array:Array)(c),f,g,k,h,m;if(!B)for(h=0;h<c;h++)e[h]=0;for(h=0;h<c;++h)0<b[h]&&d.push(h,b[h]);f=Array(d.length/2);g=new (B?Uint32Array:Array)(d.length/2);if(1===f.length)return e[d.pop().index]=1,e;h=0;for(m=d.length/2;h<m;++h)f[h]=d.pop(),g[h]=f[h].value;k=Aa(g,g.length,a);h=0;for(m=f.length;h<m;++h)e[f[h].index]=k[h];return e}\nfunction Aa(b,a,c){function d(b){var c=h[b][m[b]];c===a?(d(b+1),d(b+1)):--g[c];++m[b]}var e=new (B?Uint16Array:Array)(c),f=new (B?Uint8Array:Array)(c),g=new (B?Uint8Array:Array)(a),k=Array(c),h=Array(c),m=Array(c),r=(1<<c)-a,p=1<<c-1,l,n,s,u,w;e[c-1]=a;for(n=0;n<c;++n)r<p?f[n]=0:(f[n]=1,r-=p),r<<=1,e[c-2-n]=(e[c-1-n]/2|0)+a;e[0]=f[0];k[0]=Array(e[0]);h[0]=Array(e[0]);for(n=1;n<c;++n)e[n]>2*e[n-1]+f[n]&&(e[n]=2*e[n-1]+f[n]),k[n]=Array(e[n]),h[n]=Array(e[n]);for(l=0;l<a;++l)g[l]=c;for(s=0;s<e[c-1];++s)k[c-\n1][s]=b[s],h[c-1][s]=s;for(l=0;l<c;++l)m[l]=0;1===f[c-1]&&(--g[0],++m[c-1]);for(n=c-2;0<=n;--n){u=l=0;w=m[n+1];for(s=0;s<e[n];s++)u=k[n+1][w]+k[n+1][w+1],u>b[l]?(k[n][s]=u,h[n][s]=a,w+=2):(k[n][s]=b[l],h[n][s]=l,++l);m[n]=0;1===f[n]&&d(n)}return g}\nfunction ua(b){var a=new (B?Uint16Array:Array)(b.length),c=[],d=[],e=0,f,g,k,h;f=0;for(g=b.length;f<g;f++)c[b[f]]=(c[b[f]]|0)+1;f=1;for(g=16;f<=g;f++)d[f]=e,e+=c[f]|0,e<<=1;f=0;for(g=b.length;f<g;f++){e=d[b[f]];d[b[f]]+=1;k=a[f]=0;for(h=b[f];k<h;k++)a[f]=a[f]<<1|e&1,e>>>=1}return a};function Ba(b,a){this.input=b;this.b=this.c=0;this.g={};a&&(a.flags&&(this.g=a.flags),\"string\"===typeof a.filename&&(this.filename=a.filename),\"string\"===typeof a.comment&&(this.w=a.comment),a.deflateOptions&&(this.l=a.deflateOptions));this.l||(this.l={})}\nBa.prototype.h=function(){var b,a,c,d,e,f,g,k,h=new (B?Uint8Array:Array)(32768),m=0,r=this.input,p=this.c,l=this.filename,n=this.w;h[m++]=31;h[m++]=139;h[m++]=8;b=0;this.g.fname&&(b|=Ca);this.g.fcomment&&(b|=Da);this.g.fhcrc&&(b|=Ea);h[m++]=b;a=(Date.now?Date.now():+new Date)/1E3|0;h[m++]=a&255;h[m++]=a>>>8&255;h[m++]=a>>>16&255;h[m++]=a>>>24&255;h[m++]=0;h[m++]=Sa;if(this.g.fname!==t){g=0;for(k=l.length;g<k;++g)f=l.charCodeAt(g),255<f&&(h[m++]=f>>>8&255),h[m++]=f&255;h[m++]=0}if(this.g.comment){g=\n0;for(k=n.length;g<k;++g)f=n.charCodeAt(g),255<f&&(h[m++]=f>>>8&255),h[m++]=f&255;h[m++]=0}this.g.fhcrc&&(c=ha(h,0,m)&65535,h[m++]=c&255,h[m++]=c>>>8&255);this.l.outputBuffer=h;this.l.outputIndex=m;e=new na(r,this.l);h=e.h();m=e.b;B&&(m+8>h.buffer.byteLength?(this.a=new Uint8Array(m+8),this.a.set(new Uint8Array(h.buffer)),h=this.a):h=new Uint8Array(h.buffer));d=ha(r,t,t);h[m++]=d&255;h[m++]=d>>>8&255;h[m++]=d>>>16&255;h[m++]=d>>>24&255;k=r.length;h[m++]=k&255;h[m++]=k>>>8&255;h[m++]=k>>>16&255;h[m++]=\nk>>>24&255;this.c=p;B&&m<h.length&&(this.a=h=h.subarray(0,m));return h};var Sa=255,Ea=2,Ca=8,Da=16;function V(b,a){this.o=[];this.p=32768;this.e=this.j=this.c=this.s=0;this.input=B?new Uint8Array(b):b;this.u=!1;this.q=Ta;this.K=!1;if(a||!(a={}))a.index&&(this.c=a.index),a.bufferSize&&(this.p=a.bufferSize),a.bufferType&&(this.q=a.bufferType),a.resize&&(this.K=a.resize);switch(this.q){case Ua:this.b=32768;this.a=new (B?Uint8Array:Array)(32768+this.p+258);break;case Ta:this.b=0;this.a=new (B?Uint8Array:Array)(this.p);this.f=this.S;this.z=this.O;this.r=this.Q;break;default:q(Error(\"invalid inflate mode\"))}}\nvar Ua=0,Ta=1;\nV.prototype.i=function(){for(;!this.u;){var b=W(this,3);b&1&&(this.u=v);b>>>=1;switch(b){case 0:var a=this.input,c=this.c,d=this.a,e=this.b,f=a.length,g=t,k=t,h=d.length,m=t;this.e=this.j=0;c+1>=f&&q(Error(\"invalid uncompressed block header: LEN\"));g=a[c++]|a[c++]<<8;c+1>=f&&q(Error(\"invalid uncompressed block header: NLEN\"));k=a[c++]|a[c++]<<8;g===~k&&q(Error(\"invalid uncompressed block header: length verify\"));c+g>a.length&&q(Error(\"input buffer is broken\"));switch(this.q){case Ua:for(;e+g>d.length;){m=\nh-e;g-=m;if(B)d.set(a.subarray(c,c+m),e),e+=m,c+=m;else for(;m--;)d[e++]=a[c++];this.b=e;d=this.f();e=this.b}break;case Ta:for(;e+g>d.length;)d=this.f({B:2});break;default:q(Error(\"invalid inflate mode\"))}if(B)d.set(a.subarray(c,c+g),e),e+=g,c+=g;else for(;g--;)d[e++]=a[c++];this.c=c;this.b=e;this.a=d;break;case 1:this.r(Va,Wa);break;case 2:for(var r=W(this,5)+257,p=W(this,5)+1,l=W(this,4)+4,n=new (B?Uint8Array:Array)(Xa.length),s=t,u=t,w=t,C=t,x=t,D=t,M=t,z=t,N=t,z=0;z<l;++z)n[Xa[z]]=W(this,3);if(!B){z=\nl;for(l=n.length;z<l;++z)n[Xa[z]]=0}s=T(n);C=new (B?Uint8Array:Array)(r+p);z=0;for(N=r+p;z<N;)switch(x=Ya(this,s),x){case 16:for(M=3+W(this,2);M--;)C[z++]=D;break;case 17:for(M=3+W(this,3);M--;)C[z++]=0;D=0;break;case 18:for(M=11+W(this,7);M--;)C[z++]=0;D=0;break;default:D=C[z++]=x}u=B?T(C.subarray(0,r)):T(C.slice(0,r));w=B?T(C.subarray(r)):T(C.slice(r));this.r(u,w);break;default:q(Error(\"unknown BTYPE: \"+b))}}return this.z()};\nvar Za=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],Xa=B?new Uint16Array(Za):Za,$a=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],ab=B?new Uint16Array($a):$a,bb=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],cb=B?new Uint8Array(bb):bb,db=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],eb=B?new Uint16Array(db):db,fb=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,\n10,11,11,12,12,13,13],gb=B?new Uint8Array(fb):fb,hb=new (B?Uint8Array:Array)(288),$,ib;$=0;for(ib=hb.length;$<ib;++$)hb[$]=143>=$?8:255>=$?9:279>=$?7:8;var Va=T(hb),jb=new (B?Uint8Array:Array)(30),kb,lb;kb=0;for(lb=jb.length;kb<lb;++kb)jb[kb]=5;var Wa=T(jb);function W(b,a){for(var c=b.j,d=b.e,e=b.input,f=b.c,g=e.length,k;d<a;)f>=g&&q(Error(\"input buffer is broken\")),c|=e[f++]<<d,d+=8;k=c&(1<<a)-1;b.j=c>>>a;b.e=d-a;b.c=f;return k}\nfunction Ya(b,a){for(var c=b.j,d=b.e,e=b.input,f=b.c,g=e.length,k=a[0],h=a[1],m,r;d<h&&!(f>=g);)c|=e[f++]<<d,d+=8;m=k[c&(1<<h)-1];r=m>>>16;r>d&&q(Error(\"invalid code length: \"+r));b.j=c>>r;b.e=d-r;b.c=f;return m&65535}\nV.prototype.r=function(b,a){var c=this.a,d=this.b;this.A=b;for(var e=c.length-258,f,g,k,h;256!==(f=Ya(this,b));)if(256>f)d>=e&&(this.b=d,c=this.f(),d=this.b),c[d++]=f;else{g=f-257;h=ab[g];0<cb[g]&&(h+=W(this,cb[g]));f=Ya(this,a);k=eb[f];0<gb[f]&&(k+=W(this,gb[f]));d>=e&&(this.b=d,c=this.f(),d=this.b);for(;h--;)c[d]=c[d++-k]}for(;8<=this.e;)this.e-=8,this.c--;this.b=d};\nV.prototype.Q=function(b,a){var c=this.a,d=this.b;this.A=b;for(var e=c.length,f,g,k,h;256!==(f=Ya(this,b));)if(256>f)d>=e&&(c=this.f(),e=c.length),c[d++]=f;else{g=f-257;h=ab[g];0<cb[g]&&(h+=W(this,cb[g]));f=Ya(this,a);k=eb[f];0<gb[f]&&(k+=W(this,gb[f]));d+h>e&&(c=this.f(),e=c.length);for(;h--;)c[d]=c[d++-k]}for(;8<=this.e;)this.e-=8,this.c--;this.b=d};\nV.prototype.f=function(){var b=new (B?Uint8Array:Array)(this.b-32768),a=this.b-32768,c,d,e=this.a;if(B)b.set(e.subarray(32768,b.length));else{c=0;for(d=b.length;c<d;++c)b[c]=e[c+32768]}this.o.push(b);this.s+=b.length;if(B)e.set(e.subarray(a,a+32768));else for(c=0;32768>c;++c)e[c]=e[a+c];this.b=32768;return e};\nV.prototype.S=function(b){var a,c=this.input.length/this.c+1|0,d,e,f,g=this.input,k=this.a;b&&(\"number\"===typeof b.B&&(c=b.B),\"number\"===typeof b.M&&(c+=b.M));2>c?(d=(g.length-this.c)/this.A[2],f=258*(d/2)|0,e=f<k.length?k.length+f:k.length<<1):e=k.length*c;B?(a=new Uint8Array(e),a.set(k)):a=k;return this.a=a};\nV.prototype.z=function(){var b=0,a=this.a,c=this.o,d,e=new (B?Uint8Array:Array)(this.s+(this.b-32768)),f,g,k,h;if(0===c.length)return B?this.a.subarray(32768,this.b):this.a.slice(32768,this.b);f=0;for(g=c.length;f<g;++f){d=c[f];k=0;for(h=d.length;k<h;++k)e[b++]=d[k]}f=32768;for(g=this.b;f<g;++f)e[b++]=a[f];this.o=[];return this.buffer=e};\nV.prototype.O=function(){var b,a=this.b;B?this.K?(b=new Uint8Array(a),b.set(this.a.subarray(0,a))):b=this.a.subarray(0,a):(this.a.length>a&&(this.a.length=a),b=this.a);return this.buffer=b};function mb(b){this.input=b;this.c=0;this.G=[];this.R=!1}\nmb.prototype.i=function(){for(var b=this.input.length;this.c<b;){var a=new ja,c=t,d=t,e=t,f=t,g=t,k=t,h=t,m=t,r=t,p=this.input,l=this.c;a.C=p[l++];a.D=p[l++];(31!==a.C||139!==a.D)&&q(Error(\"invalid file signature:\"+a.C+\",\"+a.D));a.v=p[l++];switch(a.v){case 8:break;default:q(Error(\"unknown compression method: \"+a.v))}a.n=p[l++];m=p[l++]|p[l++]<<8|p[l++]<<16|p[l++]<<24;a.$=new Date(1E3*m);a.ba=p[l++];a.aa=p[l++];0<(a.n&4)&&(a.W=p[l++]|p[l++]<<8,l+=a.W);if(0<(a.n&Ca)){h=[];for(k=0;0<(g=p[l++]);)h[k++]=\nString.fromCharCode(g);a.name=h.join(\"\")}if(0<(a.n&Da)){h=[];for(k=0;0<(g=p[l++]);)h[k++]=String.fromCharCode(g);a.w=h.join(\"\")}0<(a.n&Ea)&&(a.P=ha(p,0,l)&65535,a.P!==(p[l++]|p[l++]<<8)&&q(Error(\"invalid header crc16\")));c=p[p.length-4]|p[p.length-3]<<8|p[p.length-2]<<16|p[p.length-1]<<24;p.length-l-4-4<512*c&&(f=c);d=new V(p,{index:l,bufferSize:f});a.data=e=d.i();l=d.c;a.Y=r=(p[l++]|p[l++]<<8|p[l++]<<16|p[l++]<<24)>>>0;ha(e,t,t)!==r&&q(Error(\"invalid CRC-32 checksum: 0x\"+ha(e,t,t).toString(16)+\" / 0x\"+\nr.toString(16)));a.Z=c=(p[l++]|p[l++]<<8|p[l++]<<16|p[l++]<<24)>>>0;(e.length&4294967295)!==c&&q(Error(\"invalid input size: \"+(e.length&4294967295)+\" / \"+c));this.G.push(a);this.c=l}this.R=v;var n=this.G,s,u,w=0,C=0,x;s=0;for(u=n.length;s<u;++s)C+=n[s].data.length;if(B){x=new Uint8Array(C);for(s=0;s<u;++s)x.set(n[s].data,w),w+=n[s].data.length}else{x=[];for(s=0;s<u;++s)x[s]=n[s].data;x=Array.prototype.concat.apply([],x)}return x};function nb(b){if(\"string\"===typeof b){var a=b.split(\"\"),c,d;c=0;for(d=a.length;c<d;c++)a[c]=(a[c].charCodeAt(0)&255)>>>0;b=a}for(var e=1,f=0,g=b.length,k,h=0;0<g;){k=1024<g?1024:g;g-=k;do e+=b[h++],f+=e;while(--k);e%=65521;f%=65521}return(f<<16|e)>>>0};function ob(b,a){var c,d;this.input=b;this.c=0;if(a||!(a={}))a.index&&(this.c=a.index),a.verify&&(this.V=a.verify);c=b[this.c++];d=b[this.c++];switch(c&15){case pb:this.method=pb;break;default:q(Error(\"unsupported compression method\"))}0!==((c<<8)+d)%31&&q(Error(\"invalid fcheck flag:\"+((c<<8)+d)%31));d&32&&q(Error(\"fdict flag is not supported\"));this.J=new V(b,{index:this.c,bufferSize:a.bufferSize,bufferType:a.bufferType,resize:a.resize})}\nob.prototype.i=function(){var b=this.input,a,c;a=this.J.i();this.c=this.J.c;this.V&&(c=(b[this.c++]<<24|b[this.c++]<<16|b[this.c++]<<8|b[this.c++])>>>0,c!==nb(a)&&q(Error(\"invalid adler-32 checksum\")));return a};var pb=8;function rb(b,a){this.input=b;this.a=new (B?Uint8Array:Array)(32768);this.k=sb.t;var c={},d;if((a||!(a={}))&&\"number\"===typeof a.compressionType)this.k=a.compressionType;for(d in a)c[d]=a[d];c.outputBuffer=this.a;this.I=new na(this.input,c)}var sb=pa;\nrb.prototype.h=function(){var b,a,c,d,e,f,g,k=0;g=this.a;b=pb;switch(b){case pb:a=Math.LOG2E*Math.log(32768)-8;break;default:q(Error(\"invalid compression method\"))}c=a<<4|b;g[k++]=c;switch(b){case pb:switch(this.k){case sb.NONE:e=0;break;case sb.L:e=1;break;case sb.t:e=2;break;default:q(Error(\"unsupported compression type\"))}break;default:q(Error(\"invalid compression method\"))}d=e<<6|0;g[k++]=d|31-(256*c+d)%31;f=nb(this.input);this.I.b=k;g=this.I.h();k=g.length;B&&(g=new Uint8Array(g.buffer),g.length<=\nk+4&&(this.a=new Uint8Array(g.length+4),this.a.set(g),g=this.a),g=g.subarray(0,k+4));g[k++]=f>>24&255;g[k++]=f>>16&255;g[k++]=f>>8&255;g[k++]=f&255;return g};exports.deflate=tb;exports.deflateSync=ub;exports.inflate=vb;exports.inflateSync=wb;exports.gzip=xb;exports.gzipSync=yb;exports.gunzip=zb;exports.gunzipSync=Ab;function tb(b,a,c){process.nextTick(function(){var d,e;try{e=ub(b,c)}catch(f){d=f}a(d,e)})}function ub(b,a){var c;c=(new rb(b)).h();a||(a={});return a.H?c:Bb(c)}function vb(b,a,c){process.nextTick(function(){var d,e;try{e=wb(b,c)}catch(f){d=f}a(d,e)})}\nfunction wb(b,a){var c;b.subarray=b.slice;c=(new ob(b)).i();a||(a={});return a.noBuffer?c:Bb(c)}function xb(b,a,c){process.nextTick(function(){var d,e;try{e=yb(b,c)}catch(f){d=f}a(d,e)})}function yb(b,a){var c;b.subarray=b.slice;c=(new Ba(b)).h();a||(a={});return a.H?c:Bb(c)}function zb(b,a,c){process.nextTick(function(){var d,e;try{e=Ab(b,c)}catch(f){d=f}a(d,e)})}function Ab(b,a){var c;b.subarray=b.slice;c=(new mb(b)).i();a||(a={});return a.H?c:Bb(c)}\nfunction Bb(b){var a=new Buffer(b.length),c,d;c=0;for(d=b.length;c<d;++c)a[c]=b[c];return a};}).call(this);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","const { set, get } = require('idb-keyval');\n\nmodule.exports = {\n  readCache: get,\n  writeCache: set,\n};\n","class Store {\r\n    constructor(dbName = 'keyval-store', storeName = 'keyval') {\r\n        this.storeName = storeName;\r\n        this._dbp = new Promise((resolve, reject) => {\r\n            const openreq = indexedDB.open(dbName, 1);\r\n            openreq.onerror = () => reject(openreq.error);\r\n            openreq.onsuccess = () => resolve(openreq.result);\r\n            // First time setup: create an empty object store\r\n            openreq.onupgradeneeded = () => {\r\n                openreq.result.createObjectStore(storeName);\r\n            };\r\n        });\r\n    }\r\n    _withIDBStore(type, callback) {\r\n        return this._dbp.then(db => new Promise((resolve, reject) => {\r\n            const transaction = db.transaction(this.storeName, type);\r\n            transaction.oncomplete = () => resolve();\r\n            transaction.onabort = transaction.onerror = () => reject(transaction.error);\r\n            callback(transaction.objectStore(this.storeName));\r\n        }));\r\n    }\r\n}\r\nlet store;\r\nfunction getDefaultStore() {\r\n    if (!store)\r\n        store = new Store();\r\n    return store;\r\n}\r\nfunction get(key, store = getDefaultStore()) {\r\n    let req;\r\n    return store._withIDBStore('readonly', store => {\r\n        req = store.get(key);\r\n    }).then(() => req.result);\r\n}\r\nfunction set(key, value, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.put(value, key);\r\n    });\r\n}\r\nfunction del(key, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.delete(key);\r\n    });\r\n}\r\nfunction clear(store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.clear();\r\n    });\r\n}\r\nfunction keys(store = getDefaultStore()) {\r\n    const keys = [];\r\n    return store._withIDBStore('readonly', store => {\r\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\r\n        // And openKeyCursor isn't supported by Safari.\r\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function () {\r\n            if (!this.result)\r\n                return;\r\n            keys.push(this.result.key);\r\n            this.result.continue();\r\n        };\r\n    }).then(() => keys);\r\n}\n\nexport { Store, get, set, del, clear, keys };\n","module.exports = (TessModule, buf) => {\n  const ptr = TessModule._malloc(buf.length * Uint8Array.BYTES_PER_ELEMENT);\n  TessModule.HEAPU8.set(buf, ptr);\n  const pix = TessModule._pixReadMem(ptr, buf.length);\n  if (TessModule.getValue(pix + (7 * 4), 'i32') === 0) {\n    /*\n     * Set a yres default value to prevent warning from tesseract\n     * See kMinCredibleResolution in tesseract/src/ccstruct/publictypes.h\n     */\n    TessModule.setValue(pix + (7 * 4), 70, 'i32');\n  }\n  const [w, h, d, spp, wpl, refcount, xres, yres, informat, special] = Array(10).fill(0)\n    .map((v, idx) => (\n      TessModule.getValue(pix + (idx * 4), 'i32')\n    ));\n  return {\n    w,\n    h,\n    d,\n    spp,\n    wpl,\n    refcount,\n    xres,\n    yres,\n    informat,\n    special,\n    data: pix,\n  };\n};\n","// the generated HOCR is excessively indented, so\n// we get rid of that indentation\n\nconst deindent = (html) => {\n  const lines = html.split('\\n');\n  if (lines[0].substring(0, 2) === '  ') {\n    for (let i = 0; i < lines.length; i += 1) {\n      if (lines[i].substring(0, 2) === '  ') {\n        lines[i] = lines[i].slice(2);\n      }\n    }\n  }\n  return lines.join('\\n');\n};\n\nmodule.exports = (Module, base) => {\n  const ri = base.GetIterator();\n  const blocks = [];\n  let block;\n  let para;\n  let textline;\n  let word;\n  let symbol;\n\n  const enumToString = (value, prefix) => (\n    Object.keys(Module)\n      .filter(e => (e.substr(0, prefix.length + 1) === `${prefix}_`))\n      .filter(e => Module[e] === value)\n      .map(e => e.slice(prefix.length + 1))[0]\n  );\n\n  ri.Begin();\n  do {\n    if (ri.IsAtBeginningOf(Module.RIL_BLOCK)) {\n      const poly = ri.BlockPolygon();\n      let polygon = null;\n      // BlockPolygon() returns null when automatic page segmentation is off\n      if (Module.getPointer(poly) > 0) {\n        const n = poly.get_n();\n        const px = poly.get_x();\n        const py = poly.get_y();\n        polygon = [];\n        for (let i = 0; i < n; i += 1) {\n          polygon.push([px.getValue(i), py.getValue(i)]);\n        }\n        Module._ptaDestroy(Module.getPointer(poly));\n      }\n\n      block = {\n        paragraphs: [],\n        text: ri.GetUTF8Text(Module.RIL_BLOCK),\n        confidence: ri.Confidence(Module.RIL_BLOCK),\n        baseline: ri.getBaseline(Module.RIL_BLOCK),\n        bbox: ri.getBoundingBox(Module.RIL_BLOCK),\n        blocktype: enumToString(ri.BlockType(), 'PT'),\n        polygon,\n      };\n      blocks.push(block);\n    }\n    if (ri.IsAtBeginningOf(Module.RIL_PARA)) {\n      para = {\n        lines: [],\n        text: ri.GetUTF8Text(Module.RIL_PARA),\n        confidence: ri.Confidence(Module.RIL_PARA),\n        baseline: ri.getBaseline(Module.RIL_PARA),\n        bbox: ri.getBoundingBox(Module.RIL_PARA),\n        is_ltr: !!ri.ParagraphIsLtr(),\n      };\n      block.paragraphs.push(para);\n    }\n    if (ri.IsAtBeginningOf(Module.RIL_TEXTLINE)) {\n      textline = {\n        words: [],\n        text: ri.GetUTF8Text(Module.RIL_TEXTLINE),\n        confidence: ri.Confidence(Module.RIL_TEXTLINE),\n        baseline: ri.getBaseline(Module.RIL_TEXTLINE),\n        bbox: ri.getBoundingBox(Module.RIL_TEXTLINE),\n      };\n      para.lines.push(textline);\n    }\n    if (ri.IsAtBeginningOf(Module.RIL_WORD)) {\n      const fontInfo = ri.getWordFontAttributes();\n      const wordDir = ri.WordDirection();\n      word = {\n        symbols: [],\n        choices: [],\n\n        text: ri.GetUTF8Text(Module.RIL_WORD),\n        confidence: ri.Confidence(Module.RIL_WORD),\n        baseline: ri.getBaseline(Module.RIL_WORD),\n        bbox: ri.getBoundingBox(Module.RIL_WORD),\n\n        is_numeric: !!ri.WordIsNumeric(),\n        in_dictionary: !!ri.WordIsFromDictionary(),\n        direction: enumToString(wordDir, 'DIR'),\n        language: ri.WordRecognitionLanguage(),\n\n        is_bold: fontInfo.is_bold,\n        is_italic: fontInfo.is_italic,\n        is_underlined: fontInfo.is_underlined,\n        is_monospace: fontInfo.is_monospace,\n        is_serif: fontInfo.is_serif,\n        is_smallcaps: fontInfo.is_smallcaps,\n        font_size: fontInfo.pointsize,\n        font_id: fontInfo.font_id,\n        font_name: fontInfo.font_name,\n      };\n      const wc = new Module.WordChoiceIterator(ri);\n      do {\n        word.choices.push({\n          text: wc.GetUTF8Text(),\n          confidence: wc.Confidence(),\n        });\n      } while (wc.Next());\n      Module.destroy(wc);\n      textline.words.push(word);\n    }\n\n    // let image = null;\n    // var pix = ri.GetBinaryImage(Module.RIL_SYMBOL)\n    // var image = pix2array(pix);\n    // // for some reason it seems that things stop working if you destroy pics\n    // Module._pixDestroy(Module.getPointer(pix));\n    if (ri.IsAtBeginningOf(Module.RIL_SYMBOL)) {\n      symbol = {\n        choices: [],\n        image: null,\n        text: ri.GetUTF8Text(Module.RIL_SYMBOL),\n        confidence: ri.Confidence(Module.RIL_SYMBOL),\n        baseline: ri.getBaseline(Module.RIL_SYMBOL),\n        bbox: ri.getBoundingBox(Module.RIL_SYMBOL),\n        is_superscript: !!ri.SymbolIsSuperscript(),\n        is_subscript: !!ri.SymbolIsSubscript(),\n        is_dropcap: !!ri.SymbolIsDropcap(),\n      };\n      word.symbols.push(symbol);\n      const ci = new Module.ChoiceIterator(ri);\n      do {\n        symbol.choices.push({\n          text: ci.GetUTF8Text(),\n          confidence: ci.Confidence(),\n        });\n      } while (ci.Next());\n      // Module.destroy(i);\n    }\n  } while (ri.Next(Module.RIL_SYMBOL));\n  Module.destroy(ri);\n\n  return {\n    text: base.GetUTF8Text(),\n    html: deindent(base.GetHOCRText()),\n    confidence: base.MeanTextConf(),\n    blocks,\n    psm: enumToString(base.GetPageSegMode(), 'PSM'),\n    oem: enumToString(base.oem(), 'OEM'),\n    version: base.Version(),\n  };\n};\n"],"sourceRoot":""}