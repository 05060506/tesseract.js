{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///(webpack)/buildin/global.js","webpack:///./src/browser/worker.js","webpack:///./src/common/worker.js","webpack:///./node_modules/tesseract.js-utils/src/index.browser.js","webpack:///./node_modules/tesseract.js-utils/src/loadLang.js","webpack:///./node_modules/tesseract.js-utils/src/common/browser/fetch.js","webpack:///./node_modules/tesseract.js-utils/node_modules/whatwg-fetch/fetch.js","webpack:///./node_modules/tesseract.js-utils/src/common/browser/gunzip.js","webpack:///./node_modules/zlibjs/bin/node-zlib.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/tesseract.js-utils/src/common/browser/cache.js","webpack:///./node_modules/idb-keyval/dist/idb-keyval.mjs","webpack:///./node_modules/tesseract.js-utils/src/readImage.js","webpack:///./src/common/dump.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","global","workerUtils","addEventListener","data","dispatchHandlers","obj","postMessage","setAdapter","getCore","req","res","TesseractCore","progress","status","importScripts","workerOptions","corePath","WebAssembly","TesseractCoreWASM","TesseractCoreASM","readImage","loadLang","dump","Module","base","latestJob","adapter","handleInit","MIN_MEMORY","includes","options","lang","TOTAL_MEMORY","Core","[object Object]","percent","Math","max","then","TessModule","TessBaseAPI","Promise","setImage","image","w","h","Array","from","SetImage","SetRectangle","loadLanguage","cb","langPath","langs","tessModule","langURI","cache","packet","send","respond","jobId","action","resolve","reject","progressUpdate","Init","keys","forEach","SetVariable","ptr","Recognize","result","End","_free","handleRecognize","payload","SetPageSegMode","PSM_OSD_ONLY","results","OSResults","DetectOS","best","get_best_result","oid","get_orientation_id","sid","get_script_id","tesseract_script_id","script","get_unicharset","get_script_from_script_id","script_confidence","get_sconfidence","orientation_degrees","orientation_confidence","get_oconfidence","handleDetect","err","toString","impl","fetch","gunzip","handleLang","dataPath","cachePath","FS","mkdir","writeFile","writeCache","all","split","map","readCache","catch","resp","arrayBuffer","buf","Uint8Array","loadAndGunzipFile","__webpack_exports__","Headers","Request","Response","DOMException","support","searchParams","self","iterable","blob","Blob","formData","viewClasses","isArrayBufferView","ArrayBuffer","isView","indexOf","normalizeName","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","undefined","headers","append","isArray","header","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","slice","view","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","type","rejected","Error","text","readAsText","chars","length","fromCharCode","join","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","callback","thisArg","push","values","entries","methods","input","method","upcased","url","credentials","signal","toUpperCase","referrer","form","trim","bytes","replace","decodeURIComponent","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","message","stack","constructor","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","removeEventListener","polyfill","gunzipSync","process","Buffer","q","b","v","B","Uint16Array","Uint32Array","G","a","index","f","k","I","finish","subarray","L","aa","ba","R","ca","ha","S","ia","ja","ka","T","Number","POSITIVE_INFINITY","na","oa","F","lazy","compressionType","outputBuffer","outputIndex","getParent","pop","U","pa","NONE","X","qa","va","N","C","x","u","ra","apply","M","z","Y","da","Fa","ea","Ga","la","Ha","Z","ma","E","Ia","D","qb","ta","ua","sa","y","O","A","fa","H","Ja","Ka","K","J","P","Q","Na","ga","wa","Oa","Pa","Qa","Ra","La","Ma","xa","ya","za","Aa","Ba","flags","filename","comment","deflateOptions","fname","Ca","fcomment","Da","fhcrc","Ea","Date","now","Sa","charCodeAt","V","j","Ta","bufferSize","bufferType","resize","Ua","W","Va","Wa","Xa","Ya","$","ib","Za","$a","ab","bb","db","eb","fb","gb","hb","kb","lb","jb","mb","nb","ob","verify","pb","concat","rb","sb","ub","Bb","wb","noBuffer","yb","Ab","LOG2E","log","deflate","nextTick","deflateSync","inflate","inflateSync","gzip","gzipSync","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","args","arguments","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","__proto__","arg","encodingOrOffset","allocUnsafe","byteOffset","fromArrayLike","fromArrayBuffer","string","encoding","isEncoding","actual","write","fromString","isBuffer","checked","copy","val","fromObject","assertSize","size","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","isNaN","arrayIndexOf","lastIndexOf","arr","indexSize","arrLength","valLength","read","readUInt16BE","foundIndex","found","hexWrite","offset","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","start","end","fromByteArray","utf8Slice","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","list","pos","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","match","target","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","ret","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","src","dst","b64","placeHoldersCount","tmp","placeHolders","Arr","revLookup","uint8","extraBytes","output","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","Store","del","clear","dbName","storeName","_dbp","openreq","indexedDB","onsuccess","onupgradeneeded","createObjectStore","transaction","oncomplete","objectStore","store","getDefaultStore","_withIDBStore","put","delete","openKeyCursor","openCursor","continue","_malloc","BYTES_PER_ELEMENT","HEAPU8","pix","_pixReadMem","getValue","setValue","spp","wpl","refcount","xres","yres","informat","special","idx","ri","GetIterator","blocks","block","para","textline","word","symbol","enumToString","prefix","filter","Begin","IsAtBeginningOf","RIL_BLOCK","poly","BlockPolygon","polygon","getPointer","get_n","px","get_x","py","get_y","_ptaDestroy","paragraphs","GetUTF8Text","confidence","Confidence","baseline","getBaseline","bbox","getBoundingBox","blocktype","BlockType","RIL_PARA","lines","is_ltr","ParagraphIsLtr","RIL_TEXTLINE","words","RIL_WORD","fontInfo","getWordFontAttributes","wordDir","WordDirection","symbols","choices","is_numeric","WordIsNumeric","in_dictionary","WordIsFromDictionary","direction","language","WordRecognitionLanguage","is_bold","is_italic","is_underlined","is_monospace","is_serif","is_smallcaps","font_size","pointsize","font_id","font_name","wc","WordChoiceIterator","Next","destroy","RIL_SYMBOL","is_superscript","SymbolIsSuperscript","is_subscript","SymbolIsSubscript","is_dropcap","SymbolIsDropcap","ci","ChoiceIterator","html","substring","deindent","GetHOCRText","MeanTextConf","psm","GetPageSegMode","oem","Version"],"mappings":"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","file":"worker.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","const workerUtils = require('../common/worker');\n\nglobal.addEventListener('message', ({ data }) => {\n  workerUtils.dispatchHandlers(data, obj => postMessage(obj));\n});\n\nworkerUtils.setAdapter({\n  getCore: (req, res) => {\n    if (!global.TesseractCore) {\n      res.progress({ status: 'loading tesseract core', progress: 0 });\n      global.importScripts(req.workerOptions.corePath);\n      global.TesseractCore = typeof WebAssembly === 'object' ? global.TesseractCoreWASM : global.TesseractCoreASM;\n      res.progress({ status: 'loading tesseract core', progress: 1 });\n    }\n    return global.TesseractCore;\n  },\n});\n","const { readImage, loadLang } = require('tesseract.js-utils');\nconst dump = require('./dump');\n\nlet Module;\nlet base;\nlet latestJob;\nlet adapter = {};\n\nconst handleInit = (req, res) => {\n  let MIN_MEMORY = 100663296;\n\n  if (['chi_sim', 'chi_tra', 'jpn'].includes(req.options.lang)) {\n    MIN_MEMORY = 167772160;\n  }\n\n  if (!Module || Module.TOTAL_MEMORY < MIN_MEMORY) {\n    const Core = adapter.getCore(req, res);\n\n    res.progress({ status: 'initializing tesseract', progress: 0 });\n\n    return Core({\n      // TOTAL_MEMORY: MIN_MEMORY,\n      TesseractProgress(percent) {\n        latestJob.progress({ status: 'recognizing text', progress: Math.max(0, (percent - 30) / 70) });\n      },\n    })\n      .then((TessModule) => {\n        Module = TessModule;\n        base = new Module.TessBaseAPI();\n        res.progress({ status: 'initialized tesseract', progress: 1 });\n      });\n  }\n\n  return new Promise();\n};\n\nconst setImage = (image) => {\n  const { w, h, data } = readImage(Module, Array.from(image));\n\n  base.SetImage(data);\n  base.SetRectangle(0, 0, w, h);\n  return data;\n};\n\nconst loadLanguage = (req, res, cb) => {\n  const { options: { lang }, workerOptions: { langPath } } = req;\n  return loadLang({\n    langs: lang,\n    tessModule: Module,\n    langURI: langPath,\n    cache: true,\n  }).then(cb);\n};\n\nconst handleRecognize = (req, res) => {\n  handleInit(req, res)\n    .then(() => {\n      loadLanguage(req, res, () => {\n        const { options } = req;\n\n        const progressUpdate = (progress) => {\n          res.progress({ status: 'initializing api', progress });\n        };\n\n        progressUpdate(0);\n        base.Init(null, options.lang);\n        progressUpdate(0.3);\n\n        Object.keys(options).forEach((key) => {\n          base.SetVariable(key, options[key]);\n        });\n\n        progressUpdate(0.6);\n        const ptr = setImage(req.image);\n        progressUpdate(1);\n\n        base.Recognize(null);\n\n        const result = dump(Module, base);\n\n        base.End();\n        Module._free(ptr);\n\n        res.resolve(result);\n      });\n    });\n};\n\n\nconst handleDetect = (req, res) => {\n  handleInit(req, res)\n    .then(() => {\n      req.options.lang = 'osd';\n      loadLanguage(req, res, () => {\n        base.Init(null, 'osd');\n        base.SetPageSegMode(Module.PSM_OSD_ONLY);\n\n        const ptr = setImage(req.image);\n        const results = new Module.OSResults();\n\n        if (!base.DetectOS(results)) {\n          base.End();\n          Module._free(ptr);\n          res.reject('Failed to detect OS');\n        } else {\n          const best = results.get_best_result();\n          const oid = best.get_orientation_id();\n          const sid = best.get_script_id();\n\n          base.End();\n          Module._free(ptr);\n\n          res.resolve({\n            tesseract_script_id: sid,\n            script: results.get_unicharset().get_script_from_script_id(sid),\n            script_confidence: best.get_sconfidence(),\n            orientation_degrees: [0, 270, 180, 90][oid],\n            orientation_confidence: best.get_oconfidence(),\n          });\n        }\n      });\n    });\n};\n\nexports.dispatchHandlers = (packet, send) => {\n  const respond = (status, data) => {\n    send({\n      jobId: packet.jobId,\n      status,\n      action: packet.action,\n      data,\n    });\n  };\n  respond.resolve = respond.bind(this, 'resolve');\n  respond.reject = respond.bind(this, 'reject');\n  respond.progress = respond.bind(this, 'progress');\n\n  latestJob = respond;\n\n  try {\n    if (packet.action === 'recognize') {\n      handleRecognize(packet.payload, respond);\n    } else if (packet.action === 'detect') {\n      handleDetect(packet.payload, respond);\n    }\n  } catch (err) {\n    // Prepare exception to travel through postMessage\n    respond.reject(err.toString());\n  }\n};\n\nexports.setAdapter = (impl) => {\n  adapter = impl;\n};\n","module.exports = {\n  loadLang: require('./loadLang')({\n    fetch: require('./common/browser/fetch'),\n    gunzip: require('./common/browser/gunzip'),\n    ...require('./common/browser/cache'),\n  }),\n  readImage: require('./readImage'),\n};\n","const handleLang = modules => ({\n  tessModule,\n  dataPath,\n  cachePath,\n  cache,\n  lang,\n}) => (data) => {\n  if (tessModule) {\n    if (dataPath) {\n      try {\n        tessModule.FS.mkdir(dataPath);\n      } catch (err) {\n        // Do nothing\n      }\n    }\n    tessModule.FS.writeFile(`${dataPath || '.'}/${lang}.traineddata`, data);\n  }\n  if (cache) {\n    modules.writeCache(`${cachePath || '.'}/${lang}.traineddata`, data);\n  }\n  return data;\n};\n\nconst loadAndGunzipFile = modules => ({\n  langURI,\n  cachePath,\n  ...options\n}) => lang => (\n  modules.readCache(`${cachePath || '.'}/${lang}.traineddata`)\n    .then((data) => {\n      if (typeof data === 'undefined') {\n        return Promise.reject();\n      }\n      return handleLang(modules)({ cachePath, lang, ...options })(data);\n    })\n    .catch(() => (\n      // console.log(`Download ${lang}.traineddata.gz from ${langURI}/${lang}.traineddata.gz...`);\n      modules.fetch(`${langURI}/${lang}.traineddata.gz`)\n        .then(resp => resp.arrayBuffer())\n        .then(buf => modules.gunzip(new Uint8Array(buf)))\n        .then(handleLang(modules)({ cachePath, lang, ...options }))\n    ))\n);\n\n/**\n * Load language(s) from local cache, download from remote if not in cache.\n *\n * All params below actually store in a object.\n *\n * ex:\n *   loadLang({ langs, tesssModule, ... });\n *\n * @name loadLang\n * @function\n * @param {string} langs - langs to load, use '+' for multiple languages, ex: eng+chi_tra\n * @param {object} tessModule - TesseractModule\n * @param {string} langURI - prefix URI for downloading lang file\n * @param {string} cachePath - path to find cache\n * @param {string} dataPath - path to store data in mem\n * @param {boolean} cache - true for caching\n *\n */\nmodule.exports = modules => ({\n  langs,\n  ...options\n}) => (\n  Promise\n    .all(langs.split('+').map(loadAndGunzipFile(modules)(options)))\n);\n","const { fetch } = require('whatwg-fetch');\n\nmodule.exports = fetch;\n","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : 'OK'\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      resolve(new Response(body, options))\n    }\n\n    xhr.onerror = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.ontimeout = function() {\n      reject(new TypeError('Network request failed'))\n    }\n\n    xhr.onabort = function() {\n      reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    xhr.open(request.method, request.url, true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr && support.blob) {\n      xhr.responseType = 'blob'\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n","module.exports = require('zlibjs').gunzipSync;\n","/** @license zlib.js 2012 - imaya [ https://github.com/imaya/zlib.js ] The MIT License */(function() {'use strict';function q(b){throw b;}var t=void 0,v=!0;var B=\"undefined\"!==typeof Uint8Array&&\"undefined\"!==typeof Uint16Array&&\"undefined\"!==typeof Uint32Array&&\"undefined\"!==typeof DataView;function G(b,a){this.index=\"number\"===typeof a?a:0;this.m=0;this.buffer=b instanceof(B?Uint8Array:Array)?b:new (B?Uint8Array:Array)(32768);2*this.buffer.length<=this.index&&q(Error(\"invalid index\"));this.buffer.length<=this.index&&this.f()}G.prototype.f=function(){var b=this.buffer,a,c=b.length,d=new (B?Uint8Array:Array)(c<<1);if(B)d.set(b);else for(a=0;a<c;++a)d[a]=b[a];return this.buffer=d};\nG.prototype.d=function(b,a,c){var d=this.buffer,e=this.index,f=this.m,g=d[e],k;c&&1<a&&(b=8<a?(I[b&255]<<24|I[b>>>8&255]<<16|I[b>>>16&255]<<8|I[b>>>24&255])>>32-a:I[b]>>8-a);if(8>a+f)g=g<<a|b,f+=a;else for(k=0;k<a;++k)g=g<<1|b>>a-k-1&1,8===++f&&(f=0,d[e++]=I[g],g=0,e===d.length&&(d=this.f()));d[e]=g;this.buffer=d;this.m=f;this.index=e};G.prototype.finish=function(){var b=this.buffer,a=this.index,c;0<this.m&&(b[a]<<=8-this.m,b[a]=I[b[a]],a++);B?c=b.subarray(0,a):(b.length=a,c=b);return c};\nvar aa=new (B?Uint8Array:Array)(256),L;for(L=0;256>L;++L){for(var R=L,ba=R,ca=7,R=R>>>1;R;R>>>=1)ba<<=1,ba|=R&1,--ca;aa[L]=(ba<<ca&255)>>>0}var I=aa;function ha(b,a,c){var d,e=\"number\"===typeof a?a:a=0,f=\"number\"===typeof c?c:b.length;d=-1;for(e=f&7;e--;++a)d=d>>>8^S[(d^b[a])&255];for(e=f>>3;e--;a+=8)d=d>>>8^S[(d^b[a])&255],d=d>>>8^S[(d^b[a+1])&255],d=d>>>8^S[(d^b[a+2])&255],d=d>>>8^S[(d^b[a+3])&255],d=d>>>8^S[(d^b[a+4])&255],d=d>>>8^S[(d^b[a+5])&255],d=d>>>8^S[(d^b[a+6])&255],d=d>>>8^S[(d^b[a+7])&255];return(d^4294967295)>>>0}\nvar ia=[0,1996959894,3993919788,2567524794,124634137,1886057615,3915621685,2657392035,249268274,2044508324,3772115230,2547177864,162941995,2125561021,3887607047,2428444049,498536548,1789927666,4089016648,2227061214,450548861,1843258603,4107580753,2211677639,325883990,1684777152,4251122042,2321926636,335633487,1661365465,4195302755,2366115317,997073096,1281953886,3579855332,2724688242,1006888145,1258607687,3524101629,2768942443,901097722,1119000684,3686517206,2898065728,853044451,1172266101,3705015759,\n2882616665,651767980,1373503546,3369554304,3218104598,565507253,1454621731,3485111705,3099436303,671266974,1594198024,3322730930,2970347812,795835527,1483230225,3244367275,3060149565,1994146192,31158534,2563907772,4023717930,1907459465,112637215,2680153253,3904427059,2013776290,251722036,2517215374,3775830040,2137656763,141376813,2439277719,3865271297,1802195444,476864866,2238001368,4066508878,1812370925,453092731,2181625025,4111451223,1706088902,314042704,2344532202,4240017532,1658658271,366619977,\n2362670323,4224994405,1303535960,984961486,2747007092,3569037538,1256170817,1037604311,2765210733,3554079995,1131014506,879679996,2909243462,3663771856,1141124467,855842277,2852801631,3708648649,1342533948,654459306,3188396048,3373015174,1466479909,544179635,3110523913,3462522015,1591671054,702138776,2966460450,3352799412,1504918807,783551873,3082640443,3233442989,3988292384,2596254646,62317068,1957810842,3939845945,2647816111,81470997,1943803523,3814918930,2489596804,225274430,2053790376,3826175755,\n2466906013,167816743,2097651377,4027552580,2265490386,503444072,1762050814,4150417245,2154129355,426522225,1852507879,4275313526,2312317920,282753626,1742555852,4189708143,2394877945,397917763,1622183637,3604390888,2714866558,953729732,1340076626,3518719985,2797360999,1068828381,1219638859,3624741850,2936675148,906185462,1090812512,3747672003,2825379669,829329135,1181335161,3412177804,3160834842,628085408,1382605366,3423369109,3138078467,570562233,1426400815,3317316542,2998733608,733239954,1555261956,\n3268935591,3050360625,752459403,1541320221,2607071920,3965973030,1969922972,40735498,2617837225,3943577151,1913087877,83908371,2512341634,3803740692,2075208622,213261112,2463272603,3855990285,2094854071,198958881,2262029012,4057260610,1759359992,534414190,2176718541,4139329115,1873836001,414664567,2282248934,4279200368,1711684554,285281116,2405801727,4167216745,1634467795,376229701,2685067896,3608007406,1308918612,956543938,2808555105,3495958263,1231636301,1047427035,2932959818,3654703836,1088359270,\n936918E3,2847714899,3736837829,1202900863,817233897,3183342108,3401237130,1404277552,615818150,3134207493,3453421203,1423857449,601450431,3009837614,3294710456,1567103746,711928724,3020668471,3272380065,1510334235,755167117],S=B?new Uint32Array(ia):ia;function ja(){};function ka(b){this.buffer=new (B?Uint16Array:Array)(2*b);this.length=0}ka.prototype.getParent=function(b){return 2*((b-2)/4|0)};ka.prototype.push=function(b,a){var c,d,e=this.buffer,f;c=this.length;e[this.length++]=a;for(e[this.length++]=b;0<c;)if(d=this.getParent(c),e[c]>e[d])f=e[c],e[c]=e[d],e[d]=f,f=e[c+1],e[c+1]=e[d+1],e[d+1]=f,c=d;else break;return this.length};\nka.prototype.pop=function(){var b,a,c=this.buffer,d,e,f;a=c[0];b=c[1];this.length-=2;c[0]=c[this.length];c[1]=c[this.length+1];for(f=0;;){e=2*f+2;if(e>=this.length)break;e+2<this.length&&c[e+2]>c[e]&&(e+=2);if(c[e]>c[f])d=c[f],c[f]=c[e],c[e]=d,d=c[f+1],c[f+1]=c[e+1],c[e+1]=d;else break;f=e}return{index:b,value:a,length:this.length}};function T(b){var a=b.length,c=0,d=Number.POSITIVE_INFINITY,e,f,g,k,h,m,r,p,l,n;for(p=0;p<a;++p)b[p]>c&&(c=b[p]),b[p]<d&&(d=b[p]);e=1<<c;f=new (B?Uint32Array:Array)(e);g=1;k=0;for(h=2;g<=c;){for(p=0;p<a;++p)if(b[p]===g){m=0;r=k;for(l=0;l<g;++l)m=m<<1|r&1,r>>=1;n=g<<16|p;for(l=m;l<e;l+=h)f[l]=n;++k}++g;k<<=1;h<<=1}return[f,c,d]};function na(b,a){this.k=oa;this.F=0;this.input=B&&b instanceof Array?new Uint8Array(b):b;this.b=0;a&&(a.lazy&&(this.F=a.lazy),\"number\"===typeof a.compressionType&&(this.k=a.compressionType),a.outputBuffer&&(this.a=B&&a.outputBuffer instanceof Array?new Uint8Array(a.outputBuffer):a.outputBuffer),\"number\"===typeof a.outputIndex&&(this.b=a.outputIndex));this.a||(this.a=new (B?Uint8Array:Array)(32768))}var oa=2,pa={NONE:0,L:1,t:oa,X:3},qa=[],U;\nfor(U=0;288>U;U++)switch(v){case 143>=U:qa.push([U+48,8]);break;case 255>=U:qa.push([U-144+400,9]);break;case 279>=U:qa.push([U-256+0,7]);break;case 287>=U:qa.push([U-280+192,8]);break;default:q(\"invalid literal: \"+U)}\nna.prototype.h=function(){var b,a,c,d,e=this.input;switch(this.k){case 0:c=0;for(d=e.length;c<d;){a=B?e.subarray(c,c+65535):e.slice(c,c+65535);c+=a.length;var f=a,g=c===d,k=t,h=t,m=t,r=t,p=t,l=this.a,n=this.b;if(B){for(l=new Uint8Array(this.a.buffer);l.length<=n+f.length+5;)l=new Uint8Array(l.length<<1);l.set(this.a)}k=g?1:0;l[n++]=k|0;h=f.length;m=~h+65536&65535;l[n++]=h&255;l[n++]=h>>>8&255;l[n++]=m&255;l[n++]=m>>>8&255;if(B)l.set(f,n),n+=f.length,l=l.subarray(0,n);else{r=0;for(p=f.length;r<p;++r)l[n++]=\nf[r];l.length=n}this.b=n;this.a=l}break;case 1:var s=new G(B?new Uint8Array(this.a.buffer):this.a,this.b);s.d(1,1,v);s.d(1,2,v);var u=ra(this,e),w,C,x;w=0;for(C=u.length;w<C;w++)if(x=u[w],G.prototype.d.apply(s,qa[x]),256<x)s.d(u[++w],u[++w],v),s.d(u[++w],5),s.d(u[++w],u[++w],v);else if(256===x)break;this.a=s.finish();this.b=this.a.length;break;case oa:var D=new G(B?new Uint8Array(this.a.buffer):this.a,this.b),M,z,N,X,Y,qb=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],da,Fa,ea,Ga,la,ta=Array(19),\nHa,Z,ma,E,Ia;M=oa;D.d(1,1,v);D.d(M,2,v);z=ra(this,e);da=sa(this.U,15);Fa=ua(da);ea=sa(this.T,7);Ga=ua(ea);for(N=286;257<N&&0===da[N-1];N--);for(X=30;1<X&&0===ea[X-1];X--);var Ja=N,Ka=X,K=new (B?Uint32Array:Array)(Ja+Ka),y,O,A,fa,J=new (B?Uint32Array:Array)(316),H,F,P=new (B?Uint8Array:Array)(19);for(y=O=0;y<Ja;y++)K[O++]=da[y];for(y=0;y<Ka;y++)K[O++]=ea[y];if(!B){y=0;for(fa=P.length;y<fa;++y)P[y]=0}y=H=0;for(fa=K.length;y<fa;y+=O){for(O=1;y+O<fa&&K[y+O]===K[y];++O);A=O;if(0===K[y])if(3>A)for(;0<A--;)J[H++]=\n0,P[0]++;else for(;0<A;)F=138>A?A:138,F>A-3&&F<A&&(F=A-3),10>=F?(J[H++]=17,J[H++]=F-3,P[17]++):(J[H++]=18,J[H++]=F-11,P[18]++),A-=F;else if(J[H++]=K[y],P[K[y]]++,A--,3>A)for(;0<A--;)J[H++]=K[y],P[K[y]]++;else for(;0<A;)F=6>A?A:6,F>A-3&&F<A&&(F=A-3),J[H++]=16,J[H++]=F-3,P[16]++,A-=F}b=B?J.subarray(0,H):J.slice(0,H);la=sa(P,7);for(E=0;19>E;E++)ta[E]=la[qb[E]];for(Y=19;4<Y&&0===ta[Y-1];Y--);Ha=ua(la);D.d(N-257,5,v);D.d(X-1,5,v);D.d(Y-4,4,v);for(E=0;E<Y;E++)D.d(ta[E],3,v);E=0;for(Ia=b.length;E<Ia;E++)if(Z=\nb[E],D.d(Ha[Z],la[Z],v),16<=Z){E++;switch(Z){case 16:ma=2;break;case 17:ma=3;break;case 18:ma=7;break;default:q(\"invalid code: \"+Z)}D.d(b[E],ma,v)}var La=[Fa,da],Ma=[Ga,ea],Q,Na,ga,wa,Oa,Pa,Qa,Ra;Oa=La[0];Pa=La[1];Qa=Ma[0];Ra=Ma[1];Q=0;for(Na=z.length;Q<Na;++Q)if(ga=z[Q],D.d(Oa[ga],Pa[ga],v),256<ga)D.d(z[++Q],z[++Q],v),wa=z[++Q],D.d(Qa[wa],Ra[wa],v),D.d(z[++Q],z[++Q],v);else if(256===ga)break;this.a=D.finish();this.b=this.a.length;break;default:q(\"invalid compression type\")}return this.a};\nfunction va(b,a){this.length=b;this.N=a}\nvar xa=function(){function b(a){switch(v){case 3===a:return[257,a-3,0];case 4===a:return[258,a-4,0];case 5===a:return[259,a-5,0];case 6===a:return[260,a-6,0];case 7===a:return[261,a-7,0];case 8===a:return[262,a-8,0];case 9===a:return[263,a-9,0];case 10===a:return[264,a-10,0];case 12>=a:return[265,a-11,1];case 14>=a:return[266,a-13,1];case 16>=a:return[267,a-15,1];case 18>=a:return[268,a-17,1];case 22>=a:return[269,a-19,2];case 26>=a:return[270,a-23,2];case 30>=a:return[271,a-27,2];case 34>=a:return[272,\na-31,2];case 42>=a:return[273,a-35,3];case 50>=a:return[274,a-43,3];case 58>=a:return[275,a-51,3];case 66>=a:return[276,a-59,3];case 82>=a:return[277,a-67,4];case 98>=a:return[278,a-83,4];case 114>=a:return[279,a-99,4];case 130>=a:return[280,a-115,4];case 162>=a:return[281,a-131,5];case 194>=a:return[282,a-163,5];case 226>=a:return[283,a-195,5];case 257>=a:return[284,a-227,5];case 258===a:return[285,a-258,0];default:q(\"invalid length: \"+a)}}var a=[],c,d;for(c=3;258>=c;c++)d=b(c),a[c]=d[2]<<24|d[1]<<\n16|d[0];return a}(),ya=B?new Uint32Array(xa):xa;\nfunction ra(b,a){function c(a,c){var b=a.N,d=[],f=0,e;e=ya[a.length];d[f++]=e&65535;d[f++]=e>>16&255;d[f++]=e>>24;var g;switch(v){case 1===b:g=[0,b-1,0];break;case 2===b:g=[1,b-2,0];break;case 3===b:g=[2,b-3,0];break;case 4===b:g=[3,b-4,0];break;case 6>=b:g=[4,b-5,1];break;case 8>=b:g=[5,b-7,1];break;case 12>=b:g=[6,b-9,2];break;case 16>=b:g=[7,b-13,2];break;case 24>=b:g=[8,b-17,3];break;case 32>=b:g=[9,b-25,3];break;case 48>=b:g=[10,b-33,4];break;case 64>=b:g=[11,b-49,4];break;case 96>=b:g=[12,b-\n65,5];break;case 128>=b:g=[13,b-97,5];break;case 192>=b:g=[14,b-129,6];break;case 256>=b:g=[15,b-193,6];break;case 384>=b:g=[16,b-257,7];break;case 512>=b:g=[17,b-385,7];break;case 768>=b:g=[18,b-513,8];break;case 1024>=b:g=[19,b-769,8];break;case 1536>=b:g=[20,b-1025,9];break;case 2048>=b:g=[21,b-1537,9];break;case 3072>=b:g=[22,b-2049,10];break;case 4096>=b:g=[23,b-3073,10];break;case 6144>=b:g=[24,b-4097,11];break;case 8192>=b:g=[25,b-6145,11];break;case 12288>=b:g=[26,b-8193,12];break;case 16384>=\nb:g=[27,b-12289,12];break;case 24576>=b:g=[28,b-16385,13];break;case 32768>=b:g=[29,b-24577,13];break;default:q(\"invalid distance\")}e=g;d[f++]=e[0];d[f++]=e[1];d[f++]=e[2];var h,k;h=0;for(k=d.length;h<k;++h)l[n++]=d[h];u[d[0]]++;w[d[3]]++;s=a.length+c-1;p=null}var d,e,f,g,k,h={},m,r,p,l=B?new Uint16Array(2*a.length):[],n=0,s=0,u=new (B?Uint32Array:Array)(286),w=new (B?Uint32Array:Array)(30),C=b.F,x;if(!B){for(f=0;285>=f;)u[f++]=0;for(f=0;29>=f;)w[f++]=0}u[256]=1;d=0;for(e=a.length;d<e;++d){f=k=0;\nfor(g=3;f<g&&d+f!==e;++f)k=k<<8|a[d+f];h[k]===t&&(h[k]=[]);m=h[k];if(!(0<s--)){for(;0<m.length&&32768<d-m[0];)m.shift();if(d+3>=e){p&&c(p,-1);f=0;for(g=e-d;f<g;++f)x=a[d+f],l[n++]=x,++u[x];break}0<m.length?(r=za(a,d,m),p?p.length<r.length?(x=a[d-1],l[n++]=x,++u[x],c(r,0)):c(p,-1):r.length<C?p=r:c(r,0)):p?c(p,-1):(x=a[d],l[n++]=x,++u[x])}m.push(d)}l[n++]=256;u[256]++;b.U=u;b.T=w;return B?l.subarray(0,n):l}\nfunction za(b,a,c){var d,e,f=0,g,k,h,m,r=b.length;k=0;m=c.length;a:for(;k<m;k++){d=c[m-k-1];g=3;if(3<f){for(h=f;3<h;h--)if(b[d+h-1]!==b[a+h-1])continue a;g=f}for(;258>g&&a+g<r&&b[d+g]===b[a+g];)++g;g>f&&(e=d,f=g);if(258===g)break}return new va(f,a-e)}\nfunction sa(b,a){var c=b.length,d=new ka(572),e=new (B?Uint8Array:Array)(c),f,g,k,h,m;if(!B)for(h=0;h<c;h++)e[h]=0;for(h=0;h<c;++h)0<b[h]&&d.push(h,b[h]);f=Array(d.length/2);g=new (B?Uint32Array:Array)(d.length/2);if(1===f.length)return e[d.pop().index]=1,e;h=0;for(m=d.length/2;h<m;++h)f[h]=d.pop(),g[h]=f[h].value;k=Aa(g,g.length,a);h=0;for(m=f.length;h<m;++h)e[f[h].index]=k[h];return e}\nfunction Aa(b,a,c){function d(b){var c=h[b][m[b]];c===a?(d(b+1),d(b+1)):--g[c];++m[b]}var e=new (B?Uint16Array:Array)(c),f=new (B?Uint8Array:Array)(c),g=new (B?Uint8Array:Array)(a),k=Array(c),h=Array(c),m=Array(c),r=(1<<c)-a,p=1<<c-1,l,n,s,u,w;e[c-1]=a;for(n=0;n<c;++n)r<p?f[n]=0:(f[n]=1,r-=p),r<<=1,e[c-2-n]=(e[c-1-n]/2|0)+a;e[0]=f[0];k[0]=Array(e[0]);h[0]=Array(e[0]);for(n=1;n<c;++n)e[n]>2*e[n-1]+f[n]&&(e[n]=2*e[n-1]+f[n]),k[n]=Array(e[n]),h[n]=Array(e[n]);for(l=0;l<a;++l)g[l]=c;for(s=0;s<e[c-1];++s)k[c-\n1][s]=b[s],h[c-1][s]=s;for(l=0;l<c;++l)m[l]=0;1===f[c-1]&&(--g[0],++m[c-1]);for(n=c-2;0<=n;--n){u=l=0;w=m[n+1];for(s=0;s<e[n];s++)u=k[n+1][w]+k[n+1][w+1],u>b[l]?(k[n][s]=u,h[n][s]=a,w+=2):(k[n][s]=b[l],h[n][s]=l,++l);m[n]=0;1===f[n]&&d(n)}return g}\nfunction ua(b){var a=new (B?Uint16Array:Array)(b.length),c=[],d=[],e=0,f,g,k,h;f=0;for(g=b.length;f<g;f++)c[b[f]]=(c[b[f]]|0)+1;f=1;for(g=16;f<=g;f++)d[f]=e,e+=c[f]|0,e<<=1;f=0;for(g=b.length;f<g;f++){e=d[b[f]];d[b[f]]+=1;k=a[f]=0;for(h=b[f];k<h;k++)a[f]=a[f]<<1|e&1,e>>>=1}return a};function Ba(b,a){this.input=b;this.b=this.c=0;this.g={};a&&(a.flags&&(this.g=a.flags),\"string\"===typeof a.filename&&(this.filename=a.filename),\"string\"===typeof a.comment&&(this.w=a.comment),a.deflateOptions&&(this.l=a.deflateOptions));this.l||(this.l={})}\nBa.prototype.h=function(){var b,a,c,d,e,f,g,k,h=new (B?Uint8Array:Array)(32768),m=0,r=this.input,p=this.c,l=this.filename,n=this.w;h[m++]=31;h[m++]=139;h[m++]=8;b=0;this.g.fname&&(b|=Ca);this.g.fcomment&&(b|=Da);this.g.fhcrc&&(b|=Ea);h[m++]=b;a=(Date.now?Date.now():+new Date)/1E3|0;h[m++]=a&255;h[m++]=a>>>8&255;h[m++]=a>>>16&255;h[m++]=a>>>24&255;h[m++]=0;h[m++]=Sa;if(this.g.fname!==t){g=0;for(k=l.length;g<k;++g)f=l.charCodeAt(g),255<f&&(h[m++]=f>>>8&255),h[m++]=f&255;h[m++]=0}if(this.g.comment){g=\n0;for(k=n.length;g<k;++g)f=n.charCodeAt(g),255<f&&(h[m++]=f>>>8&255),h[m++]=f&255;h[m++]=0}this.g.fhcrc&&(c=ha(h,0,m)&65535,h[m++]=c&255,h[m++]=c>>>8&255);this.l.outputBuffer=h;this.l.outputIndex=m;e=new na(r,this.l);h=e.h();m=e.b;B&&(m+8>h.buffer.byteLength?(this.a=new Uint8Array(m+8),this.a.set(new Uint8Array(h.buffer)),h=this.a):h=new Uint8Array(h.buffer));d=ha(r,t,t);h[m++]=d&255;h[m++]=d>>>8&255;h[m++]=d>>>16&255;h[m++]=d>>>24&255;k=r.length;h[m++]=k&255;h[m++]=k>>>8&255;h[m++]=k>>>16&255;h[m++]=\nk>>>24&255;this.c=p;B&&m<h.length&&(this.a=h=h.subarray(0,m));return h};var Sa=255,Ea=2,Ca=8,Da=16;function V(b,a){this.o=[];this.p=32768;this.e=this.j=this.c=this.s=0;this.input=B?new Uint8Array(b):b;this.u=!1;this.q=Ta;this.K=!1;if(a||!(a={}))a.index&&(this.c=a.index),a.bufferSize&&(this.p=a.bufferSize),a.bufferType&&(this.q=a.bufferType),a.resize&&(this.K=a.resize);switch(this.q){case Ua:this.b=32768;this.a=new (B?Uint8Array:Array)(32768+this.p+258);break;case Ta:this.b=0;this.a=new (B?Uint8Array:Array)(this.p);this.f=this.S;this.z=this.O;this.r=this.Q;break;default:q(Error(\"invalid inflate mode\"))}}\nvar Ua=0,Ta=1;\nV.prototype.i=function(){for(;!this.u;){var b=W(this,3);b&1&&(this.u=v);b>>>=1;switch(b){case 0:var a=this.input,c=this.c,d=this.a,e=this.b,f=a.length,g=t,k=t,h=d.length,m=t;this.e=this.j=0;c+1>=f&&q(Error(\"invalid uncompressed block header: LEN\"));g=a[c++]|a[c++]<<8;c+1>=f&&q(Error(\"invalid uncompressed block header: NLEN\"));k=a[c++]|a[c++]<<8;g===~k&&q(Error(\"invalid uncompressed block header: length verify\"));c+g>a.length&&q(Error(\"input buffer is broken\"));switch(this.q){case Ua:for(;e+g>d.length;){m=\nh-e;g-=m;if(B)d.set(a.subarray(c,c+m),e),e+=m,c+=m;else for(;m--;)d[e++]=a[c++];this.b=e;d=this.f();e=this.b}break;case Ta:for(;e+g>d.length;)d=this.f({B:2});break;default:q(Error(\"invalid inflate mode\"))}if(B)d.set(a.subarray(c,c+g),e),e+=g,c+=g;else for(;g--;)d[e++]=a[c++];this.c=c;this.b=e;this.a=d;break;case 1:this.r(Va,Wa);break;case 2:for(var r=W(this,5)+257,p=W(this,5)+1,l=W(this,4)+4,n=new (B?Uint8Array:Array)(Xa.length),s=t,u=t,w=t,C=t,x=t,D=t,M=t,z=t,N=t,z=0;z<l;++z)n[Xa[z]]=W(this,3);if(!B){z=\nl;for(l=n.length;z<l;++z)n[Xa[z]]=0}s=T(n);C=new (B?Uint8Array:Array)(r+p);z=0;for(N=r+p;z<N;)switch(x=Ya(this,s),x){case 16:for(M=3+W(this,2);M--;)C[z++]=D;break;case 17:for(M=3+W(this,3);M--;)C[z++]=0;D=0;break;case 18:for(M=11+W(this,7);M--;)C[z++]=0;D=0;break;default:D=C[z++]=x}u=B?T(C.subarray(0,r)):T(C.slice(0,r));w=B?T(C.subarray(r)):T(C.slice(r));this.r(u,w);break;default:q(Error(\"unknown BTYPE: \"+b))}}return this.z()};\nvar Za=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],Xa=B?new Uint16Array(Za):Za,$a=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,258,258],ab=B?new Uint16Array($a):$a,bb=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0],cb=B?new Uint8Array(bb):bb,db=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],eb=B?new Uint16Array(db):db,fb=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,\n10,11,11,12,12,13,13],gb=B?new Uint8Array(fb):fb,hb=new (B?Uint8Array:Array)(288),$,ib;$=0;for(ib=hb.length;$<ib;++$)hb[$]=143>=$?8:255>=$?9:279>=$?7:8;var Va=T(hb),jb=new (B?Uint8Array:Array)(30),kb,lb;kb=0;for(lb=jb.length;kb<lb;++kb)jb[kb]=5;var Wa=T(jb);function W(b,a){for(var c=b.j,d=b.e,e=b.input,f=b.c,g=e.length,k;d<a;)f>=g&&q(Error(\"input buffer is broken\")),c|=e[f++]<<d,d+=8;k=c&(1<<a)-1;b.j=c>>>a;b.e=d-a;b.c=f;return k}\nfunction Ya(b,a){for(var c=b.j,d=b.e,e=b.input,f=b.c,g=e.length,k=a[0],h=a[1],m,r;d<h&&!(f>=g);)c|=e[f++]<<d,d+=8;m=k[c&(1<<h)-1];r=m>>>16;r>d&&q(Error(\"invalid code length: \"+r));b.j=c>>r;b.e=d-r;b.c=f;return m&65535}\nV.prototype.r=function(b,a){var c=this.a,d=this.b;this.A=b;for(var e=c.length-258,f,g,k,h;256!==(f=Ya(this,b));)if(256>f)d>=e&&(this.b=d,c=this.f(),d=this.b),c[d++]=f;else{g=f-257;h=ab[g];0<cb[g]&&(h+=W(this,cb[g]));f=Ya(this,a);k=eb[f];0<gb[f]&&(k+=W(this,gb[f]));d>=e&&(this.b=d,c=this.f(),d=this.b);for(;h--;)c[d]=c[d++-k]}for(;8<=this.e;)this.e-=8,this.c--;this.b=d};\nV.prototype.Q=function(b,a){var c=this.a,d=this.b;this.A=b;for(var e=c.length,f,g,k,h;256!==(f=Ya(this,b));)if(256>f)d>=e&&(c=this.f(),e=c.length),c[d++]=f;else{g=f-257;h=ab[g];0<cb[g]&&(h+=W(this,cb[g]));f=Ya(this,a);k=eb[f];0<gb[f]&&(k+=W(this,gb[f]));d+h>e&&(c=this.f(),e=c.length);for(;h--;)c[d]=c[d++-k]}for(;8<=this.e;)this.e-=8,this.c--;this.b=d};\nV.prototype.f=function(){var b=new (B?Uint8Array:Array)(this.b-32768),a=this.b-32768,c,d,e=this.a;if(B)b.set(e.subarray(32768,b.length));else{c=0;for(d=b.length;c<d;++c)b[c]=e[c+32768]}this.o.push(b);this.s+=b.length;if(B)e.set(e.subarray(a,a+32768));else for(c=0;32768>c;++c)e[c]=e[a+c];this.b=32768;return e};\nV.prototype.S=function(b){var a,c=this.input.length/this.c+1|0,d,e,f,g=this.input,k=this.a;b&&(\"number\"===typeof b.B&&(c=b.B),\"number\"===typeof b.M&&(c+=b.M));2>c?(d=(g.length-this.c)/this.A[2],f=258*(d/2)|0,e=f<k.length?k.length+f:k.length<<1):e=k.length*c;B?(a=new Uint8Array(e),a.set(k)):a=k;return this.a=a};\nV.prototype.z=function(){var b=0,a=this.a,c=this.o,d,e=new (B?Uint8Array:Array)(this.s+(this.b-32768)),f,g,k,h;if(0===c.length)return B?this.a.subarray(32768,this.b):this.a.slice(32768,this.b);f=0;for(g=c.length;f<g;++f){d=c[f];k=0;for(h=d.length;k<h;++k)e[b++]=d[k]}f=32768;for(g=this.b;f<g;++f)e[b++]=a[f];this.o=[];return this.buffer=e};\nV.prototype.O=function(){var b,a=this.b;B?this.K?(b=new Uint8Array(a),b.set(this.a.subarray(0,a))):b=this.a.subarray(0,a):(this.a.length>a&&(this.a.length=a),b=this.a);return this.buffer=b};function mb(b){this.input=b;this.c=0;this.G=[];this.R=!1}\nmb.prototype.i=function(){for(var b=this.input.length;this.c<b;){var a=new ja,c=t,d=t,e=t,f=t,g=t,k=t,h=t,m=t,r=t,p=this.input,l=this.c;a.C=p[l++];a.D=p[l++];(31!==a.C||139!==a.D)&&q(Error(\"invalid file signature:\"+a.C+\",\"+a.D));a.v=p[l++];switch(a.v){case 8:break;default:q(Error(\"unknown compression method: \"+a.v))}a.n=p[l++];m=p[l++]|p[l++]<<8|p[l++]<<16|p[l++]<<24;a.$=new Date(1E3*m);a.ba=p[l++];a.aa=p[l++];0<(a.n&4)&&(a.W=p[l++]|p[l++]<<8,l+=a.W);if(0<(a.n&Ca)){h=[];for(k=0;0<(g=p[l++]);)h[k++]=\nString.fromCharCode(g);a.name=h.join(\"\")}if(0<(a.n&Da)){h=[];for(k=0;0<(g=p[l++]);)h[k++]=String.fromCharCode(g);a.w=h.join(\"\")}0<(a.n&Ea)&&(a.P=ha(p,0,l)&65535,a.P!==(p[l++]|p[l++]<<8)&&q(Error(\"invalid header crc16\")));c=p[p.length-4]|p[p.length-3]<<8|p[p.length-2]<<16|p[p.length-1]<<24;p.length-l-4-4<512*c&&(f=c);d=new V(p,{index:l,bufferSize:f});a.data=e=d.i();l=d.c;a.Y=r=(p[l++]|p[l++]<<8|p[l++]<<16|p[l++]<<24)>>>0;ha(e,t,t)!==r&&q(Error(\"invalid CRC-32 checksum: 0x\"+ha(e,t,t).toString(16)+\" / 0x\"+\nr.toString(16)));a.Z=c=(p[l++]|p[l++]<<8|p[l++]<<16|p[l++]<<24)>>>0;(e.length&4294967295)!==c&&q(Error(\"invalid input size: \"+(e.length&4294967295)+\" / \"+c));this.G.push(a);this.c=l}this.R=v;var n=this.G,s,u,w=0,C=0,x;s=0;for(u=n.length;s<u;++s)C+=n[s].data.length;if(B){x=new Uint8Array(C);for(s=0;s<u;++s)x.set(n[s].data,w),w+=n[s].data.length}else{x=[];for(s=0;s<u;++s)x[s]=n[s].data;x=Array.prototype.concat.apply([],x)}return x};function nb(b){if(\"string\"===typeof b){var a=b.split(\"\"),c,d;c=0;for(d=a.length;c<d;c++)a[c]=(a[c].charCodeAt(0)&255)>>>0;b=a}for(var e=1,f=0,g=b.length,k,h=0;0<g;){k=1024<g?1024:g;g-=k;do e+=b[h++],f+=e;while(--k);e%=65521;f%=65521}return(f<<16|e)>>>0};function ob(b,a){var c,d;this.input=b;this.c=0;if(a||!(a={}))a.index&&(this.c=a.index),a.verify&&(this.V=a.verify);c=b[this.c++];d=b[this.c++];switch(c&15){case pb:this.method=pb;break;default:q(Error(\"unsupported compression method\"))}0!==((c<<8)+d)%31&&q(Error(\"invalid fcheck flag:\"+((c<<8)+d)%31));d&32&&q(Error(\"fdict flag is not supported\"));this.J=new V(b,{index:this.c,bufferSize:a.bufferSize,bufferType:a.bufferType,resize:a.resize})}\nob.prototype.i=function(){var b=this.input,a,c;a=this.J.i();this.c=this.J.c;this.V&&(c=(b[this.c++]<<24|b[this.c++]<<16|b[this.c++]<<8|b[this.c++])>>>0,c!==nb(a)&&q(Error(\"invalid adler-32 checksum\")));return a};var pb=8;function rb(b,a){this.input=b;this.a=new (B?Uint8Array:Array)(32768);this.k=sb.t;var c={},d;if((a||!(a={}))&&\"number\"===typeof a.compressionType)this.k=a.compressionType;for(d in a)c[d]=a[d];c.outputBuffer=this.a;this.I=new na(this.input,c)}var sb=pa;\nrb.prototype.h=function(){var b,a,c,d,e,f,g,k=0;g=this.a;b=pb;switch(b){case pb:a=Math.LOG2E*Math.log(32768)-8;break;default:q(Error(\"invalid compression method\"))}c=a<<4|b;g[k++]=c;switch(b){case pb:switch(this.k){case sb.NONE:e=0;break;case sb.L:e=1;break;case sb.t:e=2;break;default:q(Error(\"unsupported compression type\"))}break;default:q(Error(\"invalid compression method\"))}d=e<<6|0;g[k++]=d|31-(256*c+d)%31;f=nb(this.input);this.I.b=k;g=this.I.h();k=g.length;B&&(g=new Uint8Array(g.buffer),g.length<=\nk+4&&(this.a=new Uint8Array(g.length+4),this.a.set(g),g=this.a),g=g.subarray(0,k+4));g[k++]=f>>24&255;g[k++]=f>>16&255;g[k++]=f>>8&255;g[k++]=f&255;return g};exports.deflate=tb;exports.deflateSync=ub;exports.inflate=vb;exports.inflateSync=wb;exports.gzip=xb;exports.gzipSync=yb;exports.gunzip=zb;exports.gunzipSync=Ab;function tb(b,a,c){process.nextTick(function(){var d,e;try{e=ub(b,c)}catch(f){d=f}a(d,e)})}function ub(b,a){var c;c=(new rb(b)).h();a||(a={});return a.H?c:Bb(c)}function vb(b,a,c){process.nextTick(function(){var d,e;try{e=wb(b,c)}catch(f){d=f}a(d,e)})}\nfunction wb(b,a){var c;b.subarray=b.slice;c=(new ob(b)).i();a||(a={});return a.noBuffer?c:Bb(c)}function xb(b,a,c){process.nextTick(function(){var d,e;try{e=yb(b,c)}catch(f){d=f}a(d,e)})}function yb(b,a){var c;b.subarray=b.slice;c=(new Ba(b)).h();a||(a={});return a.H?c:Bb(c)}function zb(b,a,c){process.nextTick(function(){var d,e;try{e=Ab(b,c)}catch(f){d=f}a(d,e)})}function Ab(b,a){var c;b.subarray=b.slice;c=(new mb(b)).i();a||(a={});return a.H?c:Bb(c)}\nfunction Bb(b){var a=new Buffer(b.length),c,d;c=0;for(d=b.length;c<d;++c)a[c]=b[c];return a};}).call(this);\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","const { set, get } = require('idb-keyval');\n\nmodule.exports = {\n  readCache: get,\n  writeCache: set,\n};\n","class Store {\r\n    constructor(dbName = 'keyval-store', storeName = 'keyval') {\r\n        this.storeName = storeName;\r\n        this._dbp = new Promise((resolve, reject) => {\r\n            const openreq = indexedDB.open(dbName, 1);\r\n            openreq.onerror = () => reject(openreq.error);\r\n            openreq.onsuccess = () => resolve(openreq.result);\r\n            // First time setup: create an empty object store\r\n            openreq.onupgradeneeded = () => {\r\n                openreq.result.createObjectStore(storeName);\r\n            };\r\n        });\r\n    }\r\n    _withIDBStore(type, callback) {\r\n        return this._dbp.then(db => new Promise((resolve, reject) => {\r\n            const transaction = db.transaction(this.storeName, type);\r\n            transaction.oncomplete = () => resolve();\r\n            transaction.onabort = transaction.onerror = () => reject(transaction.error);\r\n            callback(transaction.objectStore(this.storeName));\r\n        }));\r\n    }\r\n}\r\nlet store;\r\nfunction getDefaultStore() {\r\n    if (!store)\r\n        store = new Store();\r\n    return store;\r\n}\r\nfunction get(key, store = getDefaultStore()) {\r\n    let req;\r\n    return store._withIDBStore('readonly', store => {\r\n        req = store.get(key);\r\n    }).then(() => req.result);\r\n}\r\nfunction set(key, value, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.put(value, key);\r\n    });\r\n}\r\nfunction del(key, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.delete(key);\r\n    });\r\n}\r\nfunction clear(store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.clear();\r\n    });\r\n}\r\nfunction keys(store = getDefaultStore()) {\r\n    const keys = [];\r\n    return store._withIDBStore('readonly', store => {\r\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\r\n        // And openKeyCursor isn't supported by Safari.\r\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function () {\r\n            if (!this.result)\r\n                return;\r\n            keys.push(this.result.key);\r\n            this.result.continue();\r\n        };\r\n    }).then(() => keys);\r\n}\n\nexport { Store, get, set, del, clear, keys };\n","module.exports = (TessModule, buf) => {\n  const ptr = TessModule._malloc(buf.length * Uint8Array.BYTES_PER_ELEMENT);\n  TessModule.HEAPU8.set(buf, ptr);\n  const pix = TessModule._pixReadMem(ptr, buf.length);\n  if (TessModule.getValue(pix + (7 * 4), 'i32') === 0) {\n    /*\n     * Set a yres default value to prevent warning from tesseract\n     * See kMinCredibleResolution in tesseract/src/ccstruct/publictypes.h\n     */\n    TessModule.setValue(pix + (7 * 4), 70, 'i32');\n  }\n  const [w, h, d, spp, wpl, refcount, xres, yres, informat, special] = Array(10).fill(0)\n    .map((v, idx) => (\n      TessModule.getValue(pix + (idx * 4), 'i32')\n    ));\n  return {\n    w,\n    h,\n    d,\n    spp,\n    wpl,\n    refcount,\n    xres,\n    yres,\n    informat,\n    special,\n    data: pix,\n  };\n};\n","// the generated HOCR is excessively indented, so\n// we get rid of that indentation\n\nconst deindent = (html) => {\n  const lines = html.split('\\n');\n  if (lines[0].substring(0, 2) === '  ') {\n    for (let i = 0; i < lines.length; i += 1) {\n      if (lines[i].substring(0, 2) === '  ') {\n        lines[i] = lines[i].slice(2);\n      }\n    }\n  }\n  return lines.join('\\n');\n};\n\nmodule.exports = (Module, base) => {\n  const ri = base.GetIterator();\n  const blocks = [];\n  let block;\n  let para;\n  let textline;\n  let word;\n  let symbol;\n\n  const enumToString = (value, prefix) => (\n    Object.keys(Module)\n      .filter(e => (e.substr(0, prefix.length + 1) === `${prefix}_`))\n      .filter(e => Module[e] === value)\n      .map(e => e.slice(prefix.length + 1))[0]\n  );\n\n  ri.Begin();\n  do {\n    if (ri.IsAtBeginningOf(Module.RIL_BLOCK)) {\n      const poly = ri.BlockPolygon();\n      let polygon = null;\n      // BlockPolygon() returns null when automatic page segmentation is off\n      if (Module.getPointer(poly) > 0) {\n        const n = poly.get_n();\n        const px = poly.get_x();\n        const py = poly.get_y();\n        polygon = [];\n        for (let i = 0; i < n; i += 1) {\n          polygon.push([px.getValue(i), py.getValue(i)]);\n        }\n        Module._ptaDestroy(Module.getPointer(poly));\n      }\n\n      block = {\n        paragraphs: [],\n        text: ri.GetUTF8Text(Module.RIL_BLOCK),\n        confidence: ri.Confidence(Module.RIL_BLOCK),\n        baseline: ri.getBaseline(Module.RIL_BLOCK),\n        bbox: ri.getBoundingBox(Module.RIL_BLOCK),\n        blocktype: enumToString(ri.BlockType(), 'PT'),\n        polygon,\n      };\n      blocks.push(block);\n    }\n    if (ri.IsAtBeginningOf(Module.RIL_PARA)) {\n      para = {\n        lines: [],\n        text: ri.GetUTF8Text(Module.RIL_PARA),\n        confidence: ri.Confidence(Module.RIL_PARA),\n        baseline: ri.getBaseline(Module.RIL_PARA),\n        bbox: ri.getBoundingBox(Module.RIL_PARA),\n        is_ltr: !!ri.ParagraphIsLtr(),\n      };\n      block.paragraphs.push(para);\n    }\n    if (ri.IsAtBeginningOf(Module.RIL_TEXTLINE)) {\n      textline = {\n        words: [],\n        text: ri.GetUTF8Text(Module.RIL_TEXTLINE),\n        confidence: ri.Confidence(Module.RIL_TEXTLINE),\n        baseline: ri.getBaseline(Module.RIL_TEXTLINE),\n        bbox: ri.getBoundingBox(Module.RIL_TEXTLINE),\n      };\n      para.lines.push(textline);\n    }\n    if (ri.IsAtBeginningOf(Module.RIL_WORD)) {\n      const fontInfo = ri.getWordFontAttributes();\n      const wordDir = ri.WordDirection();\n      word = {\n        symbols: [],\n        choices: [],\n\n        text: ri.GetUTF8Text(Module.RIL_WORD),\n        confidence: ri.Confidence(Module.RIL_WORD),\n        baseline: ri.getBaseline(Module.RIL_WORD),\n        bbox: ri.getBoundingBox(Module.RIL_WORD),\n\n        is_numeric: !!ri.WordIsNumeric(),\n        in_dictionary: !!ri.WordIsFromDictionary(),\n        direction: enumToString(wordDir, 'DIR'),\n        language: ri.WordRecognitionLanguage(),\n\n        is_bold: fontInfo.is_bold,\n        is_italic: fontInfo.is_italic,\n        is_underlined: fontInfo.is_underlined,\n        is_monospace: fontInfo.is_monospace,\n        is_serif: fontInfo.is_serif,\n        is_smallcaps: fontInfo.is_smallcaps,\n        font_size: fontInfo.pointsize,\n        font_id: fontInfo.font_id,\n        font_name: fontInfo.font_name,\n      };\n      const wc = new Module.WordChoiceIterator(ri);\n      do {\n        word.choices.push({\n          text: wc.GetUTF8Text(),\n          confidence: wc.Confidence(),\n        });\n      } while (wc.Next());\n      Module.destroy(wc);\n      textline.words.push(word);\n    }\n\n    // let image = null;\n    // var pix = ri.GetBinaryImage(Module.RIL_SYMBOL)\n    // var image = pix2array(pix);\n    // // for some reason it seems that things stop working if you destroy pics\n    // Module._pixDestroy(Module.getPointer(pix));\n    if (ri.IsAtBeginningOf(Module.RIL_SYMBOL)) {\n      symbol = {\n        choices: [],\n        image: null,\n        text: ri.GetUTF8Text(Module.RIL_SYMBOL),\n        confidence: ri.Confidence(Module.RIL_SYMBOL),\n        baseline: ri.getBaseline(Module.RIL_SYMBOL),\n        bbox: ri.getBoundingBox(Module.RIL_SYMBOL),\n        is_superscript: !!ri.SymbolIsSuperscript(),\n        is_subscript: !!ri.SymbolIsSubscript(),\n        is_dropcap: !!ri.SymbolIsDropcap(),\n      };\n      word.symbols.push(symbol);\n      const ci = new Module.ChoiceIterator(ri);\n      do {\n        symbol.choices.push({\n          text: ci.GetUTF8Text(),\n          confidence: ci.Confidence(),\n        });\n      } while (ci.Next());\n      // Module.destroy(i);\n    }\n  } while (ri.Next(Module.RIL_SYMBOL));\n  Module.destroy(ri);\n\n  return {\n    text: base.GetUTF8Text(),\n    html: deindent(base.GetHOCRText()),\n    confidence: base.MeanTextConf(),\n    blocks,\n    psm: enumToString(base.GetPageSegMode(), 'PSM'),\n    oem: enumToString(base.oem(), 'OEM'),\n    version: base.Version(),\n  };\n};\n"],"sourceRoot":""}